<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.EntityFrameworkCore.Design</name>
    </assembly>
    <members>
        <member name="T:Microsoft.EntityFrameworkCore.Design.DbContextActivator">
            <summary>
                Used to instantiate <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> types at design time.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.DbContextActivator.CreateInstance(System.Type,System.Reflection.Assembly,Microsoft.EntityFrameworkCore.Design.IOperationReportHandler)">
            <summary>
                Creates an instance of the specified <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> type using the standard design-time
                mechanisms. When available, this will use any <see cref="T:Microsoft.EntityFrameworkCore.Design.IDesignTimeDbContextFactory`1" />
                implementations or the application's service provider.
            </summary>
            <param name="contextType">The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> type to instantiate.</param>
            <param name="startupAssembly">The application's startup assembly.</param>
            <param name="reportHandler">The design-time report handler.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.DbContextActivator.CreateInstance(System.Type,System.Reflection.Assembly,Microsoft.EntityFrameworkCore.Design.IOperationReportHandler,System.String[])">
            <summary>
                Creates an instance of the specified <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> type using the standard design-time
                mechanisms. When available, this will use any <see cref="T:Microsoft.EntityFrameworkCore.Design.IDesignTimeDbContextFactory`1" />
                implementations or the application's service provider.
            </summary>
            <param name="contextType">The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> type to instantiate.</param>
            <param name="startupAssembly">The application's startup assembly.</param>
            <param name="reportHandler">The design-time report handler.</param>
            <param name="args">Arguments passed to the application.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.DesignTimeServiceCollectionExtensions">
            <summary>
                Extension methods for adding Entity Framework Core design-time services to an
                <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
            </summary>
            <remarks>
                See <see href="https://aka.ms/efcore-docs-design-time-services">EF Core design-time services</see> for more information and examples.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.DesignTimeServiceCollectionExtensions.AddEntityFrameworkDesignTimeServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter,System.Func{System.IServiceProvider})">
            <summary>
                Adds the Entity Framework Core design-time services.
            </summary>
            <remarks>
                See <see href="https://aka.ms/efcore-docs-design-time-services">EF Core design-time services</see> for more information and examples.
            </remarks>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> the services will be added to.</param>
            <param name="reporter">Used to report design-time messages.</param>
            <param name="applicationServiceProviderAccessor">An accessor to the application service provider.</param>
            <returns>The <paramref name="services" />. This enables chaining additional method calls.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.DesignTimeServiceCollectionExtensions.AddDbContextDesignTimeServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
                Adds services from the <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> which are used at design time.
            </summary>
            <remarks>
                See <see href="https://aka.ms/efcore-docs-design-time-services">EF Core design-time services</see> for more information and examples.
            </remarks>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> the services will be added to.</param>
            <param name="context">The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> the services will be added from.</param>
            <returns>The <paramref name="services" />. This enables chaining additional method calls.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment">
            <summary>
                Represents a fluent API method call.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment" /> class.
            </summary>
            <param name="method">The method's name.</param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment.Namespace">
            <summary>
                Gets the namespace of the method's declaring type.
            </summary>
            <value> The declaring type's name. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment.DeclaringType">
            <summary>
                Gets the name of the method's declaring type.
            </summary>
            <value> The declaring type's name. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment.Method">
            <summary>
                Gets the method's name.
            </summary>
            <value> The method's name. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment.TypeArguments">
            <summary>
                Gets the method call's generic type arguments.
            </summary>
            <value>The type arguments.</value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment.Arguments">
            <summary>
                Gets the method call's arguments.
            </summary>
            <value>The method call's arguments.</value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment.IsHandledByDataAnnotations">
            <summary>
                Gets or sets a value indicating whether this method call has an equivalent data annotation.
            </summary>
            <value>A value indicating whether this method call has an equivalent data annotation.</value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment.ChainedCall">
            <summary>
                Gets the next method call to chain after this.
            </summary>
            <value>The next method call.</value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment.From(Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment)">
            <summary>
                Creates a new fluent API method call from an existing method call.
            </summary>
            <param name="call">The existing method call.</param>
            <returns>The new fluent API method call.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment.Chain(Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment)">
            <summary>
                Creates a method chain from this method to another.
            </summary>
            <param name="call">The next method.</param>
            <returns>A new fragment representing the method chain.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment.GetRequiredUsings">
            <summary>
                Gets the using statements required for this method chain.
            </summary>
            <returns>The usings.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment.FilterChain(System.Func{Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment,System.Boolean})">
            <summary>
                Creates a new method chain with calls filtered based on a predicate.
            </summary>
            <param name="predicate">A function to test each method call for a condition.</param>
            <returns>A new method chain that only contains calls from the original one that satisfy the condition.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.ILanguageBasedService">
            <summary>
                Represents a service that gets resolved based on the programming language it supports.
            </summary>
            <remarks>
                See <see href="https://aka.ms/efcore-docs-design-time-services">EF Core design-time services</see> for more information and examples.
            </remarks>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Design.ILanguageBasedService.Language">
            <summary>
                Gets the programming language supported by this service.
            </summary>
            <value> The language. </value>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.Internal.AppServiceProviderFactory">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.AppServiceProviderFactory.#ctor(System.Reflection.Assembly,Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.AppServiceProviderFactory.Create(System.String[])">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.Internal.ContextInfo">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Design.Internal.ContextInfo.Type">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Design.Internal.ContextInfo.ProviderName">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Design.Internal.ContextInfo.DatabaseName">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Design.Internal.ContextInfo.DataSource">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Design.Internal.ContextInfo.Options">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.#ctor(Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Lambda(System.Collections.Generic.IReadOnlyList{System.String},System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Reference(System.Type,System.Nullable{System.Boolean})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.ShouldUseFullName(System.Type)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.ShouldUseFullName(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Identifier(System.String,System.Collections.Generic.ICollection{System.String},System.Nullable{System.Boolean})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Namespace(System.String[])">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Literal(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Literal(System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Literal(System.Byte)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Literal(System.Char)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Literal(System.DateOnly)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Literal(System.DateTime)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Literal(System.DateTimeOffset)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Literal(System.Decimal)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Literal(System.Double)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Literal(System.Single)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Literal(System.Guid)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Literal(System.Int32)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Literal(System.Int64)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Literal(System.SByte)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Literal(System.Int16)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Literal(System.TimeOnly)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Literal(System.TimeSpan)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Literal(System.UInt32)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Literal(System.UInt64)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Literal(System.UInt16)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Literal(System.Numerics.BigInteger)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Literal(System.Type,System.Nullable{System.Boolean})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Literal``1(System.Nullable{``0})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Literal``1(``0[],System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Literal(System.Object[0:,0:])">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Literal``1(System.Collections.Generic.List{``0},System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Literal``2(System.Collections.Generic.Dictionary{``0,``1},System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Literal(System.Enum,System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.GetSimpleEnumValue(System.Type,System.String,System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.GetCompositeEnumValue(System.Type,System.Enum,System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.UnknownLiteral(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Fragment(Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment,System.String,System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Fragment(Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment,System.Int32)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Fragment(Microsoft.EntityFrameworkCore.Design.NestedClosureCodeFragment,System.Int32)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Fragment(Microsoft.EntityFrameworkCore.Design.PropertyAccessorCodeFragment)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Fragment(Microsoft.EntityFrameworkCore.Design.AttributeCodeFragment)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.XmlComment(System.String,System.Int32)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Arguments(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.GetRequiredUsings(System.Type)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Statement(System.Linq.Expressions.Expression,System.Collections.Generic.ISet{System.String})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.CSharpHelper.Expression(System.Linq.Expressions.Expression,System.Collections.Generic.ISet{System.String})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.Internal.DatabaseOperations">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.DatabaseOperations.#ctor(Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter,System.Reflection.Assembly,System.Reflection.Assembly,System.String,System.String,System.String,System.Boolean,System.String[])">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.DatabaseOperations.ScaffoldContext(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.Internal.DbContextOperations">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.DbContextOperations.#ctor(Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter,System.Reflection.Assembly,System.Reflection.Assembly,System.String,System.String,System.String,System.Boolean,System.String[])">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.DbContextOperations.#ctor(Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter,System.Reflection.Assembly,System.Reflection.Assembly,System.String,System.String,System.String,System.Boolean,System.String[],Microsoft.EntityFrameworkCore.Design.Internal.AppServiceProviderFactory)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.DbContextOperations.DropDatabase(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.DbContextOperations.ScriptDbContext(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.DbContextOperations.Optimize(System.String,System.String,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.DbContextOperations.CreateContext(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.DbContextOperations.GetContextTypes">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.DbContextOperations.GetContextType(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.DbContextOperations.GetContextInfo(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.Internal.DesignTimeConnectionStringResolver">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.DesignTimeConnectionStringResolver.#ctor(System.Func{System.IServiceProvider})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Design.Internal.DesignTimeConnectionStringResolver.ApplicationServiceProvider">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.Internal.DesignTimeServicesBuilder">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.DesignTimeServicesBuilder.#ctor(System.Reflection.Assembly,System.Reflection.Assembly,Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter,System.String[])">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.DesignTimeServicesBuilder.Build(Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.DesignTimeServicesBuilder.CreateServiceCollection(Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.DesignTimeServicesBuilder.Build(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.DesignTimeServicesBuilder.CreateServiceCollection(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.Internal.HumanizerPluralizer">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.HumanizerPluralizer.Pluralize(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.HumanizerPluralizer.Singularize(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.Internal.IDesignTimeConnectionStringResolver">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
            <remarks>
                The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />. This means a single instance
                is used by many <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instances. The implementation must be thread-safe.
                This service cannot depend on services registered as <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />.
            </remarks>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter.WriteError(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter.WriteWarning(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter.WriteInformation(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter.WriteVerbose(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter.Write(System.CodeDom.Compiler.CompilerError)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.Internal.LanguageBasedSelector`1">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.LanguageBasedSelector`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Design.Internal.LanguageBasedSelector`1.Services">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.LanguageBasedSelector`1.Select(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.LanguageBasedSelector`1.Select(System.String,System.Collections.Generic.IEnumerable{`0})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.Internal.MigrationInfo">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Design.Internal.MigrationInfo.Id">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Design.Internal.MigrationInfo.Name">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Design.Internal.MigrationInfo.Applied">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.Internal.MigrationsOperations">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.MigrationsOperations.#ctor(Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter,System.Reflection.Assembly,System.Reflection.Assembly,System.String,System.String,System.String,System.Boolean,System.String[])">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.MigrationsOperations.AddMigration(System.String,System.String,System.String,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.MigrationsOperations.GetMigrations(System.String,System.String,System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.MigrationsOperations.ScriptMigration(System.String,System.String,Microsoft.EntityFrameworkCore.Migrations.MigrationsSqlGenerationOptions,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.MigrationsOperations.UpdateDatabase(System.String,System.String,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.MigrationsOperations.RemoveMigration(System.String,System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.MigrationsOperations.HasPendingModelChanges(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.Internal.OperationLogger">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.OperationLogger.#ctor(System.String,Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.OperationLogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.OperationLogger.BeginScope``1(``0)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.OperationLogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.Internal.OperationLoggerProvider">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.OperationLoggerProvider.#ctor(Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.OperationLoggerProvider.CreateLogger(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.OperationLoggerProvider.Dispose">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.Internal.OperationReporter">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.OperationReporter.#ctor(Microsoft.EntityFrameworkCore.Design.IOperationReportHandler)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.OperationReporter.WriteError(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.OperationReporter.WriteWarning(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.OperationReporter.WriteInformation(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.Internal.OperationReporter.WriteVerbose(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.IOperationReportHandler">
            <summary>
                Used to handle reported design-time activity.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Design.IOperationReportHandler.Version">
            <summary>
                Gets the contract version of this handler.
            </summary>
            <value> The contract version of this handler. </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.IOperationReportHandler.OnError(System.String)">
            <summary>
                Invoked when an error is reported.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.IOperationReportHandler.OnWarning(System.String)">
            <summary>
                Invoked when a warning is reported.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.IOperationReportHandler.OnInformation(System.String)">
            <summary>
                Invoked when information is reported.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.IOperationReportHandler.OnVerbose(System.String)">
            <summary>
                Invoked when verbose information is reported.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.IOperationResultHandler">
            <summary>
                Used with <see cref="T:Microsoft.EntityFrameworkCore.Design.OperationExecutor" /> to handle operation results.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Design.IOperationResultHandler.Version">
            <summary>
                Gets the contract version of this handler.
            </summary>
            <value> The contract version of this handler. </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.IOperationResultHandler.OnResult(System.Object)">
            <summary>
                Invoked when a result is available.
            </summary>
            <param name="value">The result.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.IOperationResultHandler.OnError(System.String,System.String,System.String)">
            <summary>
                Invoked when an error occurs.
            </summary>
            <param name="type">The exception type.</param>
            <param name="message">The error message.</param>
            <param name="stackTrace">The stack trace.</param>
            <remarks>
                When an <see cref="T:Microsoft.EntityFrameworkCore.Design.OperationException" /> is received, the stack trace should not be shown by default.
            </remarks>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.IPluralizer">
            <summary>
                Converts identifiers to the plural and singular equivalents.
            </summary>
            <remarks>
                See <see href="https://aka.ms/efcore-docs-design-time-services">EF Core design-time services</see> for more information and examples.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.IPluralizer.Pluralize(System.String)">
            <summary>
                Gets the plural version of the given identifier. Returns the same
                identifier if it is already pluralized.
            </summary>
            <param name="identifier">The identifier to be pluralized.</param>
            <returns>The pluralized identifier.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.IPluralizer.Singularize(System.String)">
            <summary>
                Gets the singular version of the given identifier. Returns the same
                identifier if it is already singularized.
            </summary>
            <param name="identifier">The identifier to be singularized.</param>
            <returns>The singularized identifier.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.NamespaceComparer">
            <summary>
                A custom string comparer to sort using statements to have System prefixed namespaces first.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.NamespaceComparer.Compare(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.OperationException">
            <summary>
                Represents an exception whose stack trace should, by default, not be reported by the commands.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.OperationException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Design.OperationException" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.OperationException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Design.OperationException" /> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.OperationException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Design.OperationException" /> class.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.OperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.DbUpdateException" /> class from a serialized form.
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The streaming context being used.</param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.OperationExecutor">
            <summary>
                A facade for design-time operations.
            </summary>
            <remarks>
                Use the <c>CreateInstance</c> overloads on <see cref="T:System.AppDomain" /> and <see cref="T:System.Activator" /> with the
                nested types to execute operations.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.OperationExecutor.#ctor(Microsoft.EntityFrameworkCore.Design.IOperationReportHandler,System.Collections.IDictionary)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Design.OperationExecutor" /> class
            </summary>
            <remarks>
                <para>The arguments supported by <paramref name="args" /> are:</para>
                <para><c>targetName</c>--The assembly name of the target project.</para>
                <para><c>startupTargetName</c>--The assembly name of the startup project.</para>
                <para><c>projectDir</c>--The target project's root directory.</para>
                <para><c>rootNamespace</c>--The target project's root namespace.</para>
                <para><c>language</c>--The programming language to be used to generate classes.</para>
                <para><c>nullable</c>--A value indicating whether nullable reference types are enabled.</para>
                <para><c>remainingArguments</c>--Extra arguments passed into the operation.</para>
            </remarks>
            <param name="reportHandler">The <see cref="T:Microsoft.EntityFrameworkCore.Design.IOperationReportHandler" />.</param>
            <param name="args">The executor arguments.</param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.OperationExecutor.AddMigration">
            <summary>
                Represents an operation to add a new migration.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.OperationExecutor.AddMigration.#ctor(Microsoft.EntityFrameworkCore.Design.OperationExecutor,Microsoft.EntityFrameworkCore.Design.IOperationResultHandler,System.Collections.IDictionary)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Design.OperationExecutor.AddMigration" /> class.
            </summary>
            <remarks>
                <para>The arguments supported by <paramref name="args" /> are:</para>
                <para><c>name</c>--The name of the migration.</para>
                <para>
                    <c>outputDir</c>--The directory (and sub-namespace) to use. Paths are relative to the project directory. Defaults to
                    "Migrations".
                </para>
                <para><c>contextType</c>--The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> type to use.</para>
            </remarks>
            <param name="executor">The operation executor.</param>
            <param name="resultHandler">The <see cref="T:Microsoft.EntityFrameworkCore.Design.IOperationResultHandler" />.</param>
            <param name="args">The operation arguments.</param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.OperationExecutor.GetContextInfo">
            <summary>
                Represents an operation to get information about a <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.OperationExecutor.GetContextInfo.#ctor(Microsoft.EntityFrameworkCore.Design.OperationExecutor,Microsoft.EntityFrameworkCore.Design.IOperationResultHandler,System.Collections.IDictionary)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Design.OperationExecutor.GetContextInfo" /> class.
            </summary>
            <remarks>
                <para>The arguments supported by <paramref name="args" /> are:</para>
                <para><c>contextType</c>--The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> type to use.</para>
            </remarks>
            <param name="executor">The operation executor.</param>
            <param name="resultHandler">The <see cref="T:Microsoft.EntityFrameworkCore.Design.IOperationResultHandler" />.</param>
            <param name="args">The operation arguments.</param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.OperationExecutor.UpdateDatabase">
            <summary>
                Represents an operation to update the database to a specified migration.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.OperationExecutor.UpdateDatabase.#ctor(Microsoft.EntityFrameworkCore.Design.OperationExecutor,Microsoft.EntityFrameworkCore.Design.IOperationResultHandler,System.Collections.IDictionary)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Design.OperationExecutor.UpdateDatabase" /> class.
            </summary>
            <remarks>
                <para>The arguments supported by <paramref name="args" /> are:</para>
                <para>
                    <c>targetMigration</c>--The target <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Migration" />. If <see cref="F:Microsoft.EntityFrameworkCore.Migrations.Migration.InitialDatabase" />, all migrations will be
                    reverted. Defaults to the last migration.
                </para>
                <para>
                    <c>connectionString</c>--The connection string to the database. Defaults to the one specified in
                    <see cref="O:Microsoft.Extensions.DependencyInjection.EntityFrameworkServiceCollectionExtensions.AddDbContext" /> or
                    <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" />.
                </para>
                <para><c>contextType</c>--The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> to use.</para>
            </remarks>
            <param name="executor">The operation executor.</param>
            <param name="resultHandler">The <see cref="T:Microsoft.EntityFrameworkCore.Design.IOperationResultHandler" />.</param>
            <param name="args">The operation arguments.</param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.OperationExecutor.ScriptMigration">
            <summary>
                Represents an operation to generate a SQL script from migrations.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.OperationExecutor.ScriptMigration.#ctor(Microsoft.EntityFrameworkCore.Design.OperationExecutor,Microsoft.EntityFrameworkCore.Design.IOperationResultHandler,System.Collections.IDictionary)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Design.OperationExecutor.ScriptMigration" /> class.
            </summary>
            <remarks>
                <para>The arguments supported by <paramref name="args" /> are:</para>
                <para><c>fromMigration</c>--The starting migration. Defaults to <see cref="F:Microsoft.EntityFrameworkCore.Migrations.Migration.InitialDatabase" />.</para>
                <para><c>toMigration</c>--The ending migration. Defaults to the last migration.</para>
                <para><c>idempotent</c>--Generate a script that can be used on a database at any migration.</para>
                <para><c>noTransactions</c>--Don't generate SQL transaction statements.</para>
                <para><c>contextType</c>--The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> to use.</para>
            </remarks>
            <param name="executor">The operation executor.</param>
            <param name="resultHandler">The <see cref="T:Microsoft.EntityFrameworkCore.Design.IOperationResultHandler" />.</param>
            <param name="args">The operation arguments.</param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.OperationExecutor.RemoveMigration">
            <summary>
                Represents an operation to remove the last migration.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.OperationExecutor.RemoveMigration.#ctor(Microsoft.EntityFrameworkCore.Design.OperationExecutor,Microsoft.EntityFrameworkCore.Design.IOperationResultHandler,System.Collections.IDictionary)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Design.OperationExecutor.RemoveMigration" /> class.
            </summary>
            <remarks>
                <para>The arguments supported by <paramref name="args" /> are:</para>
                <para><c>contextType</c>--The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> to use.</para>
                <para><c>force</c>--Don't check to see if the migration has been applied to the database.</para>
            </remarks>
            <param name="executor">The operation executor.</param>
            <param name="resultHandler">The <see cref="T:Microsoft.EntityFrameworkCore.Design.IOperationResultHandler" />.</param>
            <param name="args">The operation arguments.</param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.OperationExecutor.GetContextTypes">
            <summary>
                Represents an operation to list available <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> types.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.OperationExecutor.GetContextTypes.#ctor(Microsoft.EntityFrameworkCore.Design.OperationExecutor,Microsoft.EntityFrameworkCore.Design.IOperationResultHandler,System.Collections.IDictionary)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Design.OperationExecutor.GetContextTypes" /> class.
            </summary>
            <remarks>
                No arguments are currently supported by <paramref name="args" />.
            </remarks>
            <param name="executor">The operation executor.</param>
            <param name="resultHandler">The <see cref="T:Microsoft.EntityFrameworkCore.Design.IOperationResultHandler" />.</param>
            <param name="args">The operation arguments.</param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.OperationExecutor.GetMigrations">
            <summary>
                Represents an operation to list available migrations.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.OperationExecutor.GetMigrations.#ctor(Microsoft.EntityFrameworkCore.Design.OperationExecutor,Microsoft.EntityFrameworkCore.Design.IOperationResultHandler,System.Collections.IDictionary)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Design.OperationExecutor.GetMigrations" /> class.
            </summary>
            <remarks>
                <para>The arguments supported by <paramref name="args" /> are:</para>
                <para><c>contextType</c>--The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> to use.</para>
                <para>
                    <c>connectionString</c>--The connection string to the database. Defaults to the one specified in
                    <see cref="O:Microsoft.Extensions.DependencyInjection.EntityFrameworkServiceCollectionExtensions.AddDbContext" /> or
                    <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" />.
                </para>
                <para><c>noConnect</c>--Don't connect to the database.</para>
            </remarks>
            <param name="executor">The operation executor.</param>
            <param name="resultHandler">The <see cref="T:Microsoft.EntityFrameworkCore.Design.IOperationResultHandler" />.</param>
            <param name="args">The operation arguments.</param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.OperationExecutor.OptimizeContext">
            <summary>
                Represents an operation to generate a compiled model from the DbContext.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.OperationExecutor.OptimizeContext.#ctor(Microsoft.EntityFrameworkCore.Design.OperationExecutor,Microsoft.EntityFrameworkCore.Design.IOperationResultHandler,System.Collections.IDictionary)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Design.OperationExecutor.OptimizeContext" /> class.
            </summary>
            <remarks>
                <para>The arguments supported by <paramref name="args" /> are:</para>
                <para><c>outputDir</c>--The directory to put files in. Paths are relative to the project directory.</para>
                <para><c>modelNamespace</c>--Specify to override the namespace of the generated model.</para>
                <para><c>contextType</c>--The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> to use.</para>
            </remarks>
            <param name="executor">The operation executor.</param>
            <param name="resultHandler">The <see cref="T:Microsoft.EntityFrameworkCore.Design.IOperationResultHandler" />.</param>
            <param name="args">The operation arguments.</param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.OperationExecutor.ScaffoldContext">
            <summary>
                Represents an operation to scaffold a <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> and entity types for a database.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.OperationExecutor.ScaffoldContext.#ctor(Microsoft.EntityFrameworkCore.Design.OperationExecutor,Microsoft.EntityFrameworkCore.Design.IOperationResultHandler,System.Collections.IDictionary)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Design.OperationExecutor.ScaffoldContext" /> class.
            </summary>
            <remarks>
                <para>The arguments supported by <paramref name="args" /> are:</para>
                <para><c>connectionString</c>--The connection string to the database.</para>
                <para><c>provider</c>--The provider to use.</para>
                <para><c>outputDir</c>--The directory to put files in. Paths are relative to the project directory.</para>
                <para><c>outputDbContextDir</c>--The directory to put DbContext file in. Paths are relative to the project directory.</para>
                <para><c>dbContextClassName</c>--The name of the DbContext to generate.</para>
                <para><c>schemaFilters</c>--The schemas of tables to generate entity types for.</para>
                <para><c>tableFilters</c>--The tables to generate entity types for.</para>
                <para><c>useDataAnnotations</c>--Use attributes to configure the model (where possible). If false, only the fluent API is used.</para>
                <para><c>overwriteFiles</c>--Overwrite existing files.</para>
                <para><c>useDatabaseNames</c>--Use table and column names directly from the database.</para>
                <para><c>modelNamespace</c>--Specify to override the namespace of the generated entity types.</para>
                <para><c>contextNamespace</c>--Specify to override the namespace of the generated DbContext class.</para>
                <para><c>noPluralize</c>--Don't use the pluralizer.</para>
            </remarks>
            <param name="executor">The operation executor.</param>
            <param name="resultHandler">The <see cref="T:Microsoft.EntityFrameworkCore.Design.IOperationResultHandler" />.</param>
            <param name="args">The operation arguments.</param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.OperationExecutor.DropDatabase">
            <summary>
                Represents an operation to drop the database.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.OperationExecutor.DropDatabase.#ctor(Microsoft.EntityFrameworkCore.Design.OperationExecutor,Microsoft.EntityFrameworkCore.Design.IOperationResultHandler,System.Collections.IDictionary)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Design.OperationExecutor.DropDatabase" /> class.
            </summary>
            <remarks>
                <para>The arguments supported by <paramref name="args" /> are:</para>
                <para><c>contextType</c>--The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> to use.</para>
            </remarks>
            <param name="executor">The operation executor.</param>
            <param name="resultHandler">The <see cref="T:Microsoft.EntityFrameworkCore.Design.IOperationResultHandler" />.</param>
            <param name="args">The operation arguments.</param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.OperationExecutor.ScriptDbContext">
            <summary>
                Represents an operation to generate a SQL script from the DbContext.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.OperationExecutor.ScriptDbContext.#ctor(Microsoft.EntityFrameworkCore.Design.OperationExecutor,Microsoft.EntityFrameworkCore.Design.IOperationResultHandler,System.Collections.IDictionary)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Design.OperationExecutor.ScriptDbContext" /> class.
            </summary>
            <remarks>
                <para>The arguments supported by <paramref name="args" /> are:</para>
                <para><c>contextType</c>--The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> to use.</para>
            </remarks>
            <param name="executor">The operation executor.</param>
            <param name="resultHandler">The <see cref="T:Microsoft.EntityFrameworkCore.Design.IOperationResultHandler" />.</param>
            <param name="args">The operation arguments.</param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.OperationExecutor.HasPendingModelChanges">
            <summary>
                Represents an operation to check if there are any pending migrations.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.OperationExecutor.HasPendingModelChanges.#ctor(Microsoft.EntityFrameworkCore.Design.OperationExecutor,Microsoft.EntityFrameworkCore.Design.IOperationResultHandler,System.Collections.IDictionary)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Design.OperationExecutor.HasPendingModelChanges" /> class.
            </summary>
            <remarks>
                <para>The arguments supported by <paramref name="args" /> are:</para>
                <para><c>contextType</c>--The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> to use.</para>
            </remarks>
            <param name="executor">The operation executor.</param>
            <param name="resultHandler">The <see cref="T:Microsoft.EntityFrameworkCore.Design.IOperationResultHandler" />.</param>
            <param name="args">The operation arguments.</param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.OperationExecutor.OperationBase">
            <summary>
                Represents an operation.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.OperationExecutor.OperationBase.#ctor(Microsoft.EntityFrameworkCore.Design.IOperationResultHandler)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Design.OperationExecutor.OperationBase" /> class.
            </summary>
            <param name="resultHandler">The <see cref="T:Microsoft.EntityFrameworkCore.Design.IOperationResultHandler" />.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.OperationExecutor.OperationBase.Execute(System.Action)">
            <summary>
                Executes an action passing exceptions to the <see cref="T:Microsoft.EntityFrameworkCore.Design.IOperationResultHandler" />.
            </summary>
            <param name="action">The action to execute.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.OperationExecutor.OperationBase.Execute``1(System.Func{``0})">
            <summary>
                Executes an action passing the result or exceptions to the <see cref="T:Microsoft.EntityFrameworkCore.Design.IOperationResultHandler" />.
            </summary>
            <typeparam name="T">The result type.</typeparam>
            <param name="action">The action to execute.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.OperationExecutor.OperationBase.Execute``1(System.Func{System.Collections.Generic.IEnumerable{``0}})">
            <summary>
                Executes an action passing results or exceptions to the <see cref="T:Microsoft.EntityFrameworkCore.Design.IOperationResultHandler" />.
            </summary>
            <typeparam name="T">The type of results.</typeparam>
            <param name="action">The action to execute.</param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.OperationReportHandler">
            <summary>
                Used to handle reported design-time activity.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Design.OperationReportHandler.Version">
            <summary>
                Gets the contract version of this handler.
            </summary>
            <value> The contract version of this handler. </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.OperationReportHandler.#ctor(System.Action{System.String},System.Action{System.String},System.Action{System.String},System.Action{System.String})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Design.OperationReportHandler" /> class.
            </summary>
            <param name="errorHandler">A callback for <see cref="M:Microsoft.EntityFrameworkCore.Design.OperationReportHandler.OnError(System.String)" />.</param>
            <param name="warningHandler">A callback for <see cref="M:Microsoft.EntityFrameworkCore.Design.OperationReportHandler.OnWarning(System.String)" />.</param>
            <param name="informationHandler">A callback for <see cref="M:Microsoft.EntityFrameworkCore.Design.OperationReportHandler.OnInformation(System.String)" />.</param>
            <param name="verboseHandler">A callback for <see cref="M:Microsoft.EntityFrameworkCore.Design.OperationReportHandler.OnVerbose(System.String)" />.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.OperationReportHandler.OnError(System.String)">
            <summary>
                Invoked when an error is reported.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.OperationReportHandler.OnWarning(System.String)">
            <summary>
                Invoked when a warning is reported.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.OperationReportHandler.OnInformation(System.String)">
            <summary>
                Invoked when information is reported.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.OperationReportHandler.OnVerbose(System.String)">
            <summary>
                Invoked when verbose information is reported.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.OperationResultHandler">
            <summary>
                Used with <see cref="T:Microsoft.EntityFrameworkCore.Design.OperationExecutor" /> to handle operation results.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Design.OperationResultHandler.Version">
            <summary>
                Gets the contract version of this handler.
            </summary>
            <value> The contract version of this handler. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Design.OperationResultHandler.HasResult">
            <summary>
                Gets a value indicating whether a result is available.
            </summary>
            <value>A value indicating whether a result is available.</value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Design.OperationResultHandler.Result">
            <summary>
                Gets the result.
            </summary>
            <value>The result.</value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Design.OperationResultHandler.ErrorType">
            <summary>
                Gets the type of the exception if any.
            </summary>
            <value>The exception type.</value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Design.OperationResultHandler.ErrorMessage">
            <summary>
                Gets the error message if any.
            </summary>
            <value>The error message.</value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Design.OperationResultHandler.ErrorStackTrace">
            <summary>
                Get the error stack trace if any.
            </summary>
            <value> The stack trace. </value>
            <remarks>
                When an <see cref="T:Microsoft.EntityFrameworkCore.Design.OperationException" /> is received, the stack trace should not be shown by default.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.OperationResultHandler.OnResult(System.Object)">
            <summary>
                Invoked when a result is available.
            </summary>
            <param name="value">The result.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.OperationResultHandler.OnError(System.String,System.String,System.String)">
            <summary>
                Invoked when an error occurs.
            </summary>
            <param name="type">The exception type.</param>
            <param name="message">The error message.</param>
            <param name="stackTrace">The stack trace.</param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragmentExtensions">
            <summary>
                Design-time <see cref="T:Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment" /> extensions.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragmentExtensions.GetRequiredUsings(Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment)">
            <summary>
                Gets the using statements required for this method call.
            </summary>
            <param name="methodCall">The method call.</param>
            <returns>The usings.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.DatabaseColumnExtensions">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.DatabaseColumnExtensions.DisplayName(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.DatabaseColumnExtensions.IsKeyOrIndex(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.DatabaseColumnExtensions.IsRowVersion(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.DatabaseForeignKeyExtensions">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.DatabaseForeignKeyExtensions.DisplayName(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseForeignKey)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.DatabaseTableExtensions">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.Internal.DatabaseTableExtensions.DisplayName(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.CompiledModelCodeGenerationOptions">
            <summary>
                Represents the options to use while generating code for compiled model metadata.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.CompiledModelCodeGenerationOptions.ModelNamespace">
            <summary>
                Gets or sets the namespace for model metadata classes.
            </summary>
            <value> The namespace for model metadata classes. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.CompiledModelCodeGenerationOptions.ContextType">
            <summary>
                Gets or sets the type of the corresponding DbContext.
            </summary>
            <value> The type of the corresponding DbContext. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.CompiledModelCodeGenerationOptions.Language">
            <summary>
                Gets or sets the programming language to scaffold for.
            </summary>
            <value> The programming language to scaffold for. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.CompiledModelCodeGenerationOptions.UseNullableReferenceTypes">
            <summary>
                Gets or sets a value indicating whether nullable reference types are enabled.
            </summary>
            <value> A value indicating whether nullable reference types are enabled. </value>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.ICompiledModelCodeGenerator">
            <summary>
                Used to generate code for compiled model metadata.
            </summary>
            <remarks>
                See <see href="https://aka.ms/efcore-docs-compiled-models">EF Core compiled models</see>, and
                <see href="https://aka.ms/efcore-docs-design-time-services">EF Core design-time services</see> for more information and examples.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.ICompiledModelCodeGenerator.GenerateModel(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Scaffolding.CompiledModelCodeGenerationOptions)">
            <summary>
                Generates code for compiled model metadata.
            </summary>
            <param name="model">The source model.</param>
            <param name="options">The options to use during generation.</param>
            <returns>The generated model metadata files.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.ICompiledModelCodeGeneratorSelector">
            <summary>
                Selects an <see cref="T:Microsoft.EntityFrameworkCore.Scaffolding.ICompiledModelCodeGenerator" /> service for given generation options.
            </summary>
            <remarks>
                See <see href="https://aka.ms/efcore-docs-compiled-models">EF Core compiled models</see>, and
                <see href="https://aka.ms/efcore-docs-design-time-services">EF Core design-time services</see> for more information and examples.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.ICompiledModelCodeGeneratorSelector.Select(Microsoft.EntityFrameworkCore.Scaffolding.CompiledModelCodeGenerationOptions)">
            <summary>
                Selects an <see cref="T:Microsoft.EntityFrameworkCore.Scaffolding.ICompiledModelCodeGenerator" /> service for given generation options.
            </summary>
            <param name="options">The generation options.</param>
            <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Scaffolding.ICompiledModelCodeGenerator" />.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.ICompiledModelScaffolder">
            <summary>
                Used to scaffold a compiled model from a model.
            </summary>
            <remarks>
                See <see href="https://aka.ms/efcore-docs-compiled-models">EF Core compiled models</see>, and
                <see href="https://aka.ms/efcore-docs-design-time-services">EF Core design-time services</see> for more information and examples.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.ICompiledModelScaffolder.ScaffoldModel(Microsoft.EntityFrameworkCore.Metadata.IModel,System.String,Microsoft.EntityFrameworkCore.Scaffolding.CompiledModelCodeGenerationOptions)">
            <summary>
                Scaffolds a compiled model from a model and saves it to disk.
            </summary>
            <param name="model">The model.</param>
            <param name="outputDir">The output directory.</param>
            <param name="options">The options to use when generating code for the model.</param>
            <returns>The scaffolded model files.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.IModelCodeGenerator">
            <summary>
                Used to generate code for a model.
            </summary>
            <remarks>
                See <see href="https://aka.ms/efcore-docs-design-time-services">EF Core design-time services</see> for more information and examples.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.IModelCodeGenerator.GenerateModel(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGenerationOptions)">
            <summary>
                Generates code for a model.
            </summary>
            <param name="model">The model.</param>
            <param name="options">The options to use during generation.</param>
            <returns>The generated model.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.IModelCodeGeneratorSelector">
            <summary>
                Selects an <see cref="T:Microsoft.EntityFrameworkCore.Scaffolding.IModelCodeGenerator" /> service for a given programming language.
            </summary>
            <remarks>
                See <see href="https://aka.ms/efcore-docs-design-time-services">EF Core design-time services</see> for more information and examples.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.IModelCodeGeneratorSelector.Select(System.String)">
            <summary>
                Selects an <see cref="T:Microsoft.EntityFrameworkCore.Scaffolding.IModelCodeGenerator" /> service for a given programming language.
            </summary>
            <param name="language">The programming language.</param>
            <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Scaffolding.IModelCodeGenerator" />.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.IModelCodeGeneratorSelector.Select(Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGenerationOptions)">
            <summary>
                Selects an <see cref="T:Microsoft.EntityFrameworkCore.Scaffolding.IModelCodeGenerator" /> service for a given set of options.
            </summary>
            <param name="options">The options.</param>
            <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Scaffolding.IModelCodeGenerator" />.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CandidateNamingService">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CandidateNamingService.GenerateCandidateIdentifier(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CandidateNamingService.GenerateCandidateIdentifier(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CandidateNamingService.GetDependentEndCandidateNavigationPropertyName(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CandidateNamingService.GetPrincipalEndCandidateNavigationPropertyName(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CandidateNamingService.GenerateCandidateIdentifier(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CompiledModelCodeGeneratorSelector">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CompiledModelCodeGeneratorSelector.#ctor(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Scaffolding.ICompiledModelCodeGenerator})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CompiledModelCodeGeneratorSelector.Select(Microsoft.EntityFrameworkCore.Scaffolding.CompiledModelCodeGenerationOptions)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CompiledModelScaffolder">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CompiledModelScaffolder.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.ICompiledModelCodeGeneratorSelector)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CompiledModelScaffolder.ModelCodeGeneratorSelector">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CompiledModelScaffolder.ScaffoldModel(Microsoft.EntityFrameworkCore.Metadata.IModel,System.String,Microsoft.EntityFrameworkCore.Scaffolding.CompiledModelCodeGenerationOptions)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpDbContextGenerator">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpDbContextGenerator.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpDbContextGenerator.Host">
            <summary>
            The current host for the text templating engine
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpDbContextGenerator.Model">
            <summary>
            Access the Model parameter of the template.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpDbContextGenerator.Options">
            <summary>
            Access the Options parameter of the template.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpDbContextGenerator.NamespaceHint">
            <summary>
            Access the NamespaceHint parameter of the template.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpDbContextGenerator.Initialize">
            <summary>
            Initialize the template
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpDbContextGeneratorBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpDbContextGeneratorBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpDbContextGeneratorBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpDbContextGeneratorBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpDbContextGeneratorBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpDbContextGeneratorBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpDbContextGeneratorBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpDbContextGeneratorBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpDbContextGeneratorBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpDbContextGeneratorBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpDbContextGeneratorBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpDbContextGeneratorBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpDbContextGeneratorBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpDbContextGeneratorBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpDbContextGeneratorBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpDbContextGeneratorBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpDbContextGeneratorBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpDbContextGeneratorBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpDbContextGeneratorBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGenerator">
            <summary>
            Class to produce the template output
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGenerator.TransformText">
            <summary>
            Create the template output
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGenerator.Host">
            <summary>
            The current host for the text templating engine
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGenerator.EntityType">
            <summary>
            Access the EntityType parameter of the template.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGenerator.Options">
            <summary>
            Access the Options parameter of the template.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGenerator.NamespaceHint">
            <summary>
            Access the NamespaceHint parameter of the template.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGenerator.Initialize">
            <summary>
            Initialize the template
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGeneratorBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGeneratorBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGeneratorBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGeneratorBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGeneratorBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGeneratorBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGeneratorBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGeneratorBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGeneratorBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGeneratorBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGeneratorBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGeneratorBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGeneratorBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGeneratorBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGeneratorBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGeneratorBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGeneratorBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGeneratorBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGeneratorBase.ToStringHelper">
            <summary>
            Helper to produce culture-oriented representation of an object as a string
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpModelGenerator">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpModelGenerator.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGeneratorDependencies,Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter,System.IServiceProvider)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpModelGenerator.Language">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpModelGenerator.GenerateModel(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGenerationOptions)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpNamer`1">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpNamer`1.NameCache">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpNamer`1.#ctor(System.Func{`0,System.String},Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities,System.Func{System.String,System.String})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpNamer`1.GetName(`0)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpRuntimeModelCodeGenerator">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpRuntimeModelCodeGenerator.#ctor(Microsoft.EntityFrameworkCore.Design.Internal.ICSharpRuntimeAnnotationCodeGenerator,Microsoft.EntityFrameworkCore.Design.ICSharpHelper)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpRuntimeModelCodeGenerator.Language">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpRuntimeModelCodeGenerator.GenerateModel(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Scaffolding.CompiledModelCodeGenerationOptions)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUniqueNamer`1">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUniqueNamer`1.#ctor(System.Func{`0,System.String},Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities,System.Func{System.String,System.String})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUniqueNamer`1.#ctor(System.Func{`0,System.String},System.Collections.Generic.IEnumerable{System.String},Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities,System.Func{System.String,System.String})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUniqueNamer`1.GetName(`0)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.IsCSharpKeyword(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateCSharpIdentifier(System.String,System.Collections.Generic.ICollection{System.String},System.Func{System.String,System.String})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.GenerateCSharpIdentifier(System.String,System.Collections.Generic.ICollection{System.String},System.Func{System.String,System.String},System.Func{System.String,System.Collections.Generic.ICollection{System.String},System.String})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.Uniquifier(System.String,System.Collections.Generic.ICollection{System.String})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities.IsValidIdentifier(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICandidateNamingService">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICandidateNamingService.GenerateCandidateIdentifier(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICandidateNamingService.GenerateCandidateIdentifier(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICandidateNamingService.GenerateCandidateIdentifier(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICandidateNamingService.GetDependentEndCandidateNavigationPropertyName(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICandidateNamingService.GetPrincipalEndCandidateNavigationPropertyName(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities.GenerateCSharpIdentifier(System.String,System.Collections.Generic.ICollection{System.String},System.Func{System.String,System.String})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities.GenerateCSharpIdentifier(System.String,System.Collections.Generic.ICollection{System.String},System.Func{System.String,System.String},System.Func{System.String,System.Collections.Generic.ICollection{System.String},System.String})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities.IsCSharpKeyword(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities.IsValidIdentifier(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingTypeMapper">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingTypeMapper.FindMapping(System.String,System.Boolean,System.Boolean,System.Type)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ITextTransformation">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ITextTransformation.Session">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ITextTransformation.Errors">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ITextTransformation.Initialize">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ITextTransformation.TransformText">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ModelCodeGeneratorSelector">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ModelCodeGeneratorSelector.#ctor(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Scaffolding.IModelCodeGenerator})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ModelCodeGeneratorSelector.Select(Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGenerationOptions)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.#ctor(Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter,Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICandidateNamingService,Microsoft.EntityFrameworkCore.Design.IPluralizer,Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities,Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingTypeMapper,Microsoft.EntityFrameworkCore.Infrastructure.IModelRuntimeInitializer)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.Create(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel,Microsoft.EntityFrameworkCore.Scaffolding.ModelReverseEngineerOptions)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.GetEntityTypeName(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.GetDbSetName(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.GetPropertyName(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.VisitDatabaseModel(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.VisitSequences(Microsoft.EntityFrameworkCore.ModelBuilder,System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseSequence})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.VisitSequence(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseSequence)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.VisitTables(Microsoft.EntityFrameworkCore.ModelBuilder,System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.VisitTable(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.VisitColumns(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.VisitColumn(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.VisitPrimaryKey(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.VisitUniqueConstraints(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseUniqueConstraint})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.VisitUniqueConstraint(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseUniqueConstraint)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.VisitIndexes(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseIndex})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.VisitIndex(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseIndex)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.VisitForeignKeys(Microsoft.EntityFrameworkCore.ModelBuilder,System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseForeignKey})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.VisitForeignKey(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseForeignKey)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.AddNavigationProperties(Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.ExistingIdentifiers(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.GetTypeScaffoldingInfo(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerScaffolder">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerScaffolder.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.IDatabaseModelFactory,Microsoft.EntityFrameworkCore.Scaffolding.IScaffoldingModelFactory,Microsoft.EntityFrameworkCore.Scaffolding.IModelCodeGeneratorSelector,Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities,Microsoft.EntityFrameworkCore.Design.ICSharpHelper,Microsoft.EntityFrameworkCore.Design.Internal.IDesignTimeConnectionStringResolver,Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerScaffolder.ModelCodeGeneratorSelector">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerScaffolder.ScaffoldModel(System.String,Microsoft.EntityFrameworkCore.Scaffolding.DatabaseModelFactoryOptions,Microsoft.EntityFrameworkCore.Scaffolding.ModelReverseEngineerOptions,Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGenerationOptions)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerScaffolder.Save(Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldedModel,System.String,System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingTypeMapper">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingTypeMapper.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingTypeMapper.FindMapping(System.String,System.Boolean,System.Boolean,System.Type)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TextTemplatingEngineHost">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TextTemplatingEngineHost.#ctor(System.IServiceProvider)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TextTemplatingEngineHost.Session">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TextTemplatingEngineHost.StandardAssemblyReferences">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TextTemplatingEngineHost.StandardImports">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TextTemplatingEngineHost.TemplateFile">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TextTemplatingEngineHost.Extension">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TextTemplatingEngineHost.Errors">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TextTemplatingEngineHost.OutputEncoding">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TextTemplatingEngineHost.Initialize">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TextTemplatingEngineHost.CreateSession">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TextTemplatingEngineHost.GetHostOption(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TextTemplatingEngineHost.LoadIncludeText(System.String,System.String@,System.String@)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TextTemplatingEngineHost.LogErrors(System.CodeDom.Compiler.CompilerErrorCollection)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TextTemplatingEngineHost.ProvideTemplatingAppDomain(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TextTemplatingEngineHost.ResolveAssemblyReference(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TextTemplatingEngineHost.ResolveDirectiveProcessor(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TextTemplatingEngineHost.ResolveParameterValue(System.String,System.String,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TextTemplatingEngineHost.ResolvePath(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TextTemplatingEngineHost.SetFileExtension(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TextTemplatingEngineHost.SetOutputEncoding(System.Text.Encoding,System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TextTemplatingEngineHost.GetService(System.Type)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TextTemplatingModelGenerator">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TextTemplatingModelGenerator.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGeneratorDependencies,Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter,System.IServiceProvider)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TextTemplatingModelGenerator.Engine">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TextTemplatingModelGenerator.HasTemplates(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TextTemplatingModelGenerator.GenerateModel(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGenerationOptions)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TypeScaffoldingInfo">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TypeScaffoldingInfo.#ctor(System.Type,System.Boolean,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TypeScaffoldingInfo.ClrType">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TypeScaffoldingInfo.IsInferred">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TypeScaffoldingInfo.ScaffoldUnicode">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TypeScaffoldingInfo.ScaffoldFixedLength">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TypeScaffoldingInfo.ScaffoldMaxLength">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TypeScaffoldingInfo.ScaffoldPrecision">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TypeScaffoldingInfo.ScaffoldScale">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.IReverseEngineerScaffolder">
            <summary>
                Used to scaffold a model from a database schema.
            </summary>
            <remarks>
                See <see href="https://aka.ms/efcore-docs-scaffolding">Reverse engineering (scaffolding) an existing database</see>, and
                <see href="https://aka.ms/efcore-docs-design-time-services">EF Core design-time services</see> for more information and examples.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.IReverseEngineerScaffolder.ScaffoldModel(System.String,Microsoft.EntityFrameworkCore.Scaffolding.DatabaseModelFactoryOptions,Microsoft.EntityFrameworkCore.Scaffolding.ModelReverseEngineerOptions,Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGenerationOptions)">
            <summary>
                Scaffolds a model from a database schema.
            </summary>
            <param name="connectionString">A connection string to the database.</param>
            <param name="databaseOptions">The options specifying which metadata to read from the database.</param>
            <param name="modelOptions">The options to use when reverse engineering a model from the database.</param>
            <param name="codeOptions">The options to use when generating code for the model.</param>
            <returns>The scaffolded model.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.IReverseEngineerScaffolder.Save(Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldedModel,System.String,System.Boolean)">
            <summary>
                Saves a scaffolded model to disk.
            </summary>
            <param name="scaffoldedModel">The scaffolded model.</param>
            <param name="outputDir">The output directory.</param>
            <param name="overwriteFiles">True to overwrite any existing files.</param>
            <returns>The model files.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.IScaffoldingModelFactory">
            <summary>
                Used to create an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IModel" /> from a <see cref="T:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel" />.
            </summary>
            <remarks>
                See <see href="https://aka.ms/efcore-docs-scaffolding">Reverse engineering (scaffolding) an existing database</see>, and
                <see href="https://aka.ms/efcore-docs-design-time-services">EF Core design-time services</see> for more information and examples.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.IScaffoldingModelFactory.Create(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel,Microsoft.EntityFrameworkCore.Scaffolding.ModelReverseEngineerOptions)">
            <summary>
                Creates an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IModel" /> from a <see cref="T:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel" />.
            </summary>
            <param name="databaseModel">The database model.</param>
            <param name="options">The options to use while creating the model.</param>
            <returns>The model.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGenerationOptions">
            <summary>
                Represents the options to use while generating code for a model.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGenerationOptions.UseDataAnnotations">
            <summary>
                Gets or sets a value indicating whether to use data annotations.
            </summary>
            <value> A value indicating whether to use data annotations. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGenerationOptions.SuppressConnectionStringWarning">
            <summary>
                Gets or sets a value indicating whether to suppress the connection string sensitive information warning.
            </summary>
            <value> A value indicating whether to suppress the connection string sensitive information warning. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGenerationOptions.SuppressOnConfiguring">
            <summary>
                Gets or sets a value indicating whether to suppress generation of the OnConfiguring() method.
            </summary>
            <value> A value indicating whether to suppress generation of the OnConfiguring() method. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGenerationOptions.RootNamespace">
            <summary>
                Gets or sets the namespace of the project.
            </summary>
            <value>The namespace of the project.</value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGenerationOptions.ModelNamespace">
            <summary>
                Gets or sets the namespace for model classes.
            </summary>
            <value> The namespace for model classes. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGenerationOptions.ContextNamespace">
            <summary>
                Gets or sets the namespace for context class.
            </summary>
            <value>The namespace for context class.</value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGenerationOptions.Language">
            <summary>
                Gets or sets the programming language to scaffold for.
            </summary>
            <value> The programming language to scaffold for. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGenerationOptions.UseNullableReferenceTypes">
            <summary>
                Gets or sets a value indicating whether nullable reference types are enabled.
            </summary>
            <value> A value indicating whether nullable reference types are enabled. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGenerationOptions.ContextDir">
            <summary>
                Gets or sets the DbContext output directory.
            </summary>
            <value> The DbContext output directory. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGenerationOptions.ContextName">
            <summary>
                Gets or sets the <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> name.
            </summary>
            <value> The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> name. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGenerationOptions.ConnectionString">
            <summary>
                Gets or sets the connection string.
            </summary>
            <value name="connectionString">The connection string. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGenerationOptions.ProjectDir">
            <summary>
                Gets or sets the root project directory.
            </summary>
            <value>The directory.</value>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGenerator">
            <summary>
                Used to generate code for a model.
            </summary>
            <remarks>
                See <see href="https://aka.ms/efcore-docs-design-time-services">EF Core design-time services</see> for more information and examples.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGenerator.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGeneratorDependencies)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGenerator" /> class.
            </summary>
            <param name="dependencies">The dependencies.</param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGenerator.Language">
            <summary>
                Gets the programming language supported by this service.
            </summary>
            <value> The language. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGenerator.Dependencies">
            <summary>
                Dependencies for this service.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGenerator.GenerateModel(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGenerationOptions)">
            <summary>
                Generates code for a model.
            </summary>
            <param name="model">The model.</param>
            <param name="options">The options to use during generation.</param>
            <returns>The generated model.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGeneratorDependencies">
            <summary>
                <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGenerator" />
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
            <remarks>
                Do not construct instances of this class directly from either provider or application code as the
                constructor signature may change as new dependencies are added. Instead, use this type in
                your constructor so that an instance will be created and injected automatically by the
                dependency injection container. To create an instance with some dependent services replaced,
                first resolve the object from the dependency injection container, then replace selected
                services using the C# 'with' operator. Do not call the constructor at any point in this process.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGeneratorDependencies.#ctor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
            <remarks>
                Do not call this constructor directly from either provider or application code as it may change
                as new dependencies are added. Instead, use this type in your constructor so that an instance
                will be created and injected automatically by the dependency injection container. To create
                an instance with some dependent services replaced, first resolve the object from the dependency
                injection container, then replace selected services using the C# 'with' operator. Do not call
                the constructor at any point in this process.
            </remarks>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.ModelReverseEngineerOptions">
            <summary>
                Represents the options to use while reverse engineering a model from the database.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.ModelReverseEngineerOptions.UseDatabaseNames">
            <summary>
                Gets or sets a value indicating whether to use the database schema names directly.
            </summary>
            <value> A value indicating whether to use the database schema names directly. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.ModelReverseEngineerOptions.NoPluralize">
            <summary>
                Gets or sets a value indicating whether to use the pluralizer.
            </summary>
            <value> A value indicating whether to use the pluralizer. </value>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.SavedModelFiles">
            <summary>
                Represents the files added for a model.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.SavedModelFiles.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Scaffolding.SavedModelFiles" /> class.
            </summary>
            <param name="contextFile">The path of the file containing the <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />.</param>
            <param name="additionalFiles">The paths of additional files used by the model.</param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.SavedModelFiles.ContextFile">
            <summary>
                Gets or sets the path of the file containing the <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />.
            </summary>
            <value> The path of the file containing the <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.SavedModelFiles.AdditionalFiles">
            <summary>
                Get the paths of additional files used by the model.
            </summary>
            <value> The paths of additional files used by the model. </value>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldedFile">
            <summary>
                Represents a scaffolded file.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldedFile.Path">
            <summary>
                Gets or sets the path.
            </summary>
            <value> The path. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldedFile.Code">
            <summary>
                Gets or sets the scaffolded code.
            </summary>
            <value> The scaffolded code. </value>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldedModel">
            <summary>
                Represents a scaffolded model.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldedModel.ContextFile">
            <summary>
                Gets or sets the generated file containing the <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />.
            </summary>
            <value> The generated file containing the <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldedModel.AdditionalFiles">
            <summary>
                Gets any additional generated files for the model.
            </summary>
            <value> Any additional generated files for the model. </value>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Scaffolding.TemplatedModelGenerator">
            <summary>
                Base type for model code generators that use templates.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.TemplatedModelGenerator.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGeneratorDependencies)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Scaffolding.TemplatedModelGenerator" /> class.
            </summary>
            <param name="dependencies">The dependencies.</param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.TemplatedModelGenerator.TemplatesDirectory">
            <summary>
                Gets the subdirectory under the project to look for templates in.
            </summary>
            <value>The subdirectory.</value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Scaffolding.TemplatedModelGenerator.Language">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Scaffolding.TemplatedModelGenerator.HasTemplates(System.String)">
            <summary>
                Checks whether the templates required for this generator are present.
            </summary>
            <param name="projectDir">The root project directory.</param>
            <returns><see langword="true" /> if the templates are present; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalScaffoldingModelExtensions">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalScaffoldingModelExtensions.GetDatabaseName(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalScaffoldingModelExtensions.SetDatabaseName(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalScaffoldingModelExtensions.SetDbSetName(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.ScaffoldingAnnotationNames">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.ScaffoldingAnnotationNames.Prefix">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.ScaffoldingAnnotationNames.DbSetName">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.ScaffoldingAnnotationNames.DatabaseName">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.ScaffoldingAnnotationNames.ConcurrencyToken">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.ScaffoldingAnnotationNames.ClrType">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.ScaffoldingAnnotationNames.ConnectionString">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ScaffoldingModelExtensions">
            <summary>
                Design-time model extensions.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ScaffoldingModelExtensions.IsSimpleManyToManyJoinEntityType(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                Check whether an entity type could be considered a many-to-many join entity type.
            </summary>
            <param name="entityType">The entity type to check.</param>
            <returns><see langword="true" /> if the entity type could be considered a join entity type.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ScaffoldingModelExtensions.IsLeftNavigation(Microsoft.EntityFrameworkCore.Metadata.ISkipNavigation)">
            <summary>
                Gets a value indicating whether the specified skip navigation represents the left side of the relationship.
            </summary>
            <param name="skipNavigation">The skip navigation to check.</param>
            <returns><see langword="true" /> if it represents the left side.</returns>
            <remarks>
                The designation of left and right is arbitrary but deterministic. This method exists primarily to avoid configuring the same
                many-to-many relationship from both of its ends.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ScaffoldingModelExtensions.GetDbSetName(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType)">
            <summary>
                Gets the name that should be used for the <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1" /> property on the <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> class for this entity
                type.
            </summary>
            <param name="entityType">The entity type.</param>
            <returns>The property name.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ScaffoldingModelExtensions.IsHandledByConvention(Microsoft.EntityFrameworkCore.Metadata.IKey)">
            <summary>
                Gets a value indicating whether the key would be configured by conventions.
            </summary>
            <param name="key">The key to check.</param>
            <returns><see langword="true" /> if the key would be configured by conventions.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ScaffoldingModelExtensions.IsHandledByDataAnnotations(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator)">
            <summary>
                Gets value indicating whether this index can be entirely reperesented by a data annotation.
            </summary>
            <param name="index">The index.</param>
            <param name="annotationCodeGenerator">The provider's annotation code generator.</param>
            <returns><see langword="true" /> if this index can be reperesented by a data annotation.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ScaffoldingModelExtensions.GetDataAnnotations(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator)">
            <summary>
                Gets the data annotations to configure an entity type.
            </summary>
            <param name="entityType">The entity type.</param>
            <param name="annotationCodeGenerator">The provider's annotation code generator.</param>
            <returns>The data annotations.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ScaffoldingModelExtensions.GetDataAnnotations(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator)">
            <summary>
                Gets the data annotations to configure a property.
            </summary>
            <param name="property">The property.</param>
            <param name="annotationCodeGenerator">The provider's annotation code generator.</param>
            <returns>The data annotations.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ScaffoldingModelExtensions.GetDataAnnotations(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator)">
            <summary>
                Gets the data annotations to configure a navigation property.
            </summary>
            <param name="navigation">The navigation property.</param>
            <param name="annotationCodeGenerator">The provider's annotation code generator.</param>
            <returns>The data annotations.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ScaffoldingModelExtensions.GetDataAnnotations(Microsoft.EntityFrameworkCore.Metadata.ISkipNavigation,Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator)">
            <summary>
                Gets the data annotations to configure a skip navigation property.
            </summary>
            <param name="skipNavigation">The skip navigation property.</param>
            <param name="annotationCodeGenerator">The provider's annotation code generator.</param>
            <returns>The data annotations.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ScaffoldingModelExtensions.GetFluentApiCalls(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator)">
            <summary>
                Gets the fluent API calls to configure a model.
            </summary>
            <param name="model">The model.</param>
            <param name="annotationCodeGenerator">The provider's annotation code generator.</param>
            <returns>The fluent API calls.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ScaffoldingModelExtensions.GetFluentApiCalls(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator)">
            <summary>
                Gets the fluent API calls to configure an entity type.
            </summary>
            <param name="entityType">The entity type.</param>
            <param name="annotationCodeGenerator">The provider's annotation code generator.</param>
            <returns>The fluent API calls.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ScaffoldingModelExtensions.GetFluentApiCalls(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator)">
            <summary>
                Gets the fluent API calls to configure a key.
            </summary>
            <param name="key">The key.</param>
            <param name="annotationCodeGenerator">The provider's annotation code generator.</param>
            <returns>The fluent API calls.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ScaffoldingModelExtensions.GetFluentApiCalls(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator)">
            <summary>
                Gets the fluent API calls to configure an index.
            </summary>
            <param name="index">The index.</param>
            <param name="annotationCodeGenerator">The provider's annotation code generator.</param>
            <returns>The fluent API calls.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ScaffoldingModelExtensions.GetFluentApiCalls(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator)">
            <summary>
                Gets the fluent API calls to configure a property.
            </summary>
            <param name="property">The property.</param>
            <param name="annotationCodeGenerator">The provider's annotation code generator.</param>
            <returns>The fluent API calls.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ScaffoldingModelExtensions.GetFluentApiCalls(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator,System.Boolean)">
            <summary>
                Gets the fluent API calls to configure a foreign key.
            </summary>
            <param name="foreignKey">The foreign key.</param>
            <param name="annotationCodeGenerator">The provider's annotation code generator.</param>
            <param name="useStrings">A value indicating wheter to use string fluent API overloads instead of ones that take a property accessor lambda.</param>
            <returns>The fluent API calls.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ScaffoldingModelExtensions.GetFluentApiCalls(Microsoft.EntityFrameworkCore.Metadata.ISequence,Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator)">
            <summary>
                Gets the fluent API calls to configure a sequence.
            </summary>
            <param name="sequence">The sequence.</param>
            <param name="annotationCodeGenerator">The provider's annotation code generator.</param>
            <returns>The fluent API calls.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator">
            <summary>
                Used to generate C# for creating <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation" /> objects.
            </summary>
            <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see>, and
                <see href="https://aka.ms/efcore-docs-design-time-services">EF Core design-time services</see> for more information and examples.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator.#ctor(Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGeneratorDependencies)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator" /> class.
            </summary>
            <param name="dependencies">The dependencies.</param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator.Dependencies">
            <summary>
                Dependencies for this service.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator.Generate(System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation},Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for creating <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation" /> objects.
            </summary>
            <param name="builderName">The <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation" /> variable name.</param>
            <param name="operations">The operations.</param>
            <param name="builder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for an unknown <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation" />.
            </summary>
            <param name="operation">The operation.</param>
            <param name="builder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation" />.
            </summary>
            <param name="operation">The operation.</param>
            <param name="builder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.AddForeignKeyOperation,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.AddForeignKeyOperation" />.
            </summary>
            <param name="operation">The operation.</param>
            <param name="builder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.AddPrimaryKeyOperation,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.AddPrimaryKeyOperation" />.
            </summary>
            <param name="operation">The operation.</param>
            <param name="builder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.AddUniqueConstraintOperation,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.AddUniqueConstraintOperation" />.
            </summary>
            <param name="operation">The operation.</param>
            <param name="builder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.AddCheckConstraintOperation,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.AddCheckConstraintOperation" />.
            </summary>
            <param name="operation">The operation.</param>
            <param name="builder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.AlterColumnOperation,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.AlterColumnOperation" />.
            </summary>
            <param name="operation">The operation.</param>
            <param name="builder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.AlterDatabaseOperation,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.AlterDatabaseOperation" />.
            </summary>
            <param name="operation">The operation.</param>
            <param name="builder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.AlterSequenceOperation,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.AlterSequenceOperation" />.
            </summary>
            <param name="operation">The operation.</param>
            <param name="builder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.AlterTableOperation,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.AlterTableOperation" />.
            </summary>
            <param name="operation">The operation.</param>
            <param name="builder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation" />.
            </summary>
            <param name="operation">The operation.</param>
            <param name="builder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.EnsureSchemaOperation,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.EnsureSchemaOperation" />.
            </summary>
            <param name="operation">The operation.</param>
            <param name="builder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.CreateSequenceOperation,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.CreateSequenceOperation" />.
            </summary>
            <param name="operation">The operation.</param>
            <param name="builder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.CreateTableOperation,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.CreateTableOperation" />.
            </summary>
            <param name="operation">The operation.</param>
            <param name="builder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.DropColumnOperation,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.DropColumnOperation" />.
            </summary>
            <param name="operation">The operation.</param>
            <param name="builder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.DropForeignKeyOperation,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.DropForeignKeyOperation" />.
            </summary>
            <param name="operation">The operation.</param>
            <param name="builder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.DropIndexOperation,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.DropIndexOperation" />.
            </summary>
            <param name="operation">The operation.</param>
            <param name="builder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.DropPrimaryKeyOperation,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.DropPrimaryKeyOperation" />.
            </summary>
            <param name="operation">The operation.</param>
            <param name="builder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.DropSchemaOperation,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.DropSchemaOperation" />.
            </summary>
            <param name="operation">The operation.</param>
            <param name="builder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.DropSequenceOperation,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.DropSequenceOperation" />.
            </summary>
            <param name="operation">The operation.</param>
            <param name="builder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation" />.
            </summary>
            <param name="operation">The operation.</param>
            <param name="builder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.DropUniqueConstraintOperation,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.DropUniqueConstraintOperation" />.
            </summary>
            <param name="operation">The operation.</param>
            <param name="builder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.DropCheckConstraintOperation,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.DropCheckConstraintOperation" />.
            </summary>
            <param name="operation">The operation.</param>
            <param name="builder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.RenameColumnOperation,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.RenameColumnOperation" />.
            </summary>
            <param name="operation">The operation.</param>
            <param name="builder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.RenameIndexOperation,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.RenameIndexOperation" />.
            </summary>
            <param name="operation">The operation.</param>
            <param name="builder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.RenameSequenceOperation,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.RenameSequenceOperation" />.
            </summary>
            <param name="operation">The operation.</param>
            <param name="builder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.RenameTableOperation,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.RenameTableOperation" />.
            </summary>
            <param name="operation">The operation.</param>
            <param name="builder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.RestartSequenceOperation,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.RestartSequenceOperation" />.
            </summary>
            <param name="operation">The operation.</param>
            <param name="builder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.SqlOperation,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.SqlOperation" />.
            </summary>
            <param name="operation">The operation.</param>
            <param name="builder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation" />.
            </summary>
            <param name="operation">The operation.</param>
            <param name="builder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation" />.
            </summary>
            <param name="operation">The operation.</param>
            <param name="builder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation" />.
            </summary>
            <param name="operation">The operation.</param>
            <param name="builder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator.Annotations(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Infrastructure.Annotation},Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.Annotation" /> objects.
            </summary>
            <param name="annotations">The annotations.</param>
            <param name="builder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator.OldAnnotations(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Infrastructure.Annotation},Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for removed <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.Annotation" /> objects.
            </summary>
            <param name="annotations">The annotations.</param>
            <param name="builder">The builder code is added to.</param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGeneratorDependencies">
            <summary>
                <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGenerator" />
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
            <remarks>
                Do not construct instances of this class directly from either provider or application code as the
                constructor signature may change as new dependencies are added. Instead, use this type in
                your constructor so that an instance will be created and injected automatically by the
                dependency injection container. To create an instance with some dependent services replaced,
                first resolve the object from the dependency injection container, then replace selected
                services using the C# 'with' operator. Do not call the constructor at any point in this process.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGeneratorDependencies.#ctor(Microsoft.EntityFrameworkCore.Design.ICSharpHelper)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
            <remarks>
                Do not call this constructor directly from either provider or application code as it may change
                as new dependencies are added. Instead, use this type in your constructor so that an instance
                will be created and injected automatically by the dependency injection container. To create
                an instance with some dependent services replaced, first resolve the object from the dependency
                injection container, then replace selected services using the C# 'with' operator. Do not call
                the constructor at any point in this process.
            </remarks>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationOperationGeneratorDependencies.CSharpHelper">
            <summary>
                The C# helper.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationsGenerator">
            <summary>
                Used to generate C# code for migrations.
            </summary>
            <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see>, and
                <see href="https://aka.ms/efcore-docs-design-time-services">EF Core design-time services</see> for more information and examples.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationsGenerator.#ctor(Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsCodeGeneratorDependencies,Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationsGeneratorDependencies)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationsGenerator" /> class.
            </summary>
            <param name="dependencies">The base dependencies.</param>
            <param name="csharpDependencies">The dependencies.</param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationsGenerator.CSharpDependencies">
            <summary>
                Dependencies for this service.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationsGenerator.FileExtension">
            <summary>
                Gets the file extension code files should use.
            </summary>
            <value> The file extension. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationsGenerator.Language">
            <summary>
                Gets the programming language supported by this service.
            </summary>
            <value> The language. </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationsGenerator.GenerateMigration(System.String,System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation})">
            <summary>
                Generates the migration code.
            </summary>
            <param name="migrationNamespace">The migration's namespace.</param>
            <param name="migrationName">The migration's name.</param>
            <param name="upOperations">The migration's up operations.</param>
            <param name="downOperations">The migration's down operations.</param>
            <returns>The migration code.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationsGenerator.GenerateMetadata(System.String,System.Type,System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                Generates the migration metadata code.
            </summary>
            <param name="migrationNamespace">The migration's namespace.</param>
            <param name="contextType">The migration's <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> type.</param>
            <param name="migrationName">The migration's name.</param>
            <param name="migrationId">The migration's ID.</param>
            <param name="targetModel">The migration's target model.</param>
            <returns>The migration metadata code.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationsGenerator.GenerateSnapshot(System.String,System.Type,System.String,Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                Generates the model snapshot code.
            </summary>
            <param name="modelSnapshotNamespace">The model snapshot's namespace.</param>
            <param name="contextType">The model snapshot's <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> type.</param>
            <param name="modelSnapshotName">The model snapshot's name.</param>
            <param name="model">The model.</param>
            <returns>The model snapshot code.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationsGeneratorDependencies">
            <summary>
                <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationsGenerator" />
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
            <remarks>
                Do not construct instances of this class directly from either provider or application code as the
                constructor signature may change as new dependencies are added. Instead, use this type in
                your constructor so that an instance will be created and injected automatically by the
                dependency injection container. To create an instance with some dependent services replaced,
                first resolve the object from the dependency injection container, then replace selected
                services using the C# 'with' operator. Do not call the constructor at any point in this process.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationsGeneratorDependencies.#ctor(Microsoft.EntityFrameworkCore.Design.ICSharpHelper,Microsoft.EntityFrameworkCore.Migrations.Design.ICSharpMigrationOperationGenerator,Microsoft.EntityFrameworkCore.Migrations.Design.ICSharpSnapshotGenerator)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
            <remarks>
                Do not call this constructor directly from either provider or application code as it may change
                as new dependencies are added. Instead, use this type in your constructor so that an instance
                will be created and injected automatically by the dependency injection container. To create
                an instance with some dependent services replaced, first resolve the object from the dependency
                injection container, then replace selected services using the C# 'with' operator. Do not call
                the constructor at any point in this process.
            </remarks>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationsGeneratorDependencies.CSharpHelper">
            <summary>
                The C# helper.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationsGeneratorDependencies.CSharpMigrationOperationGenerator">
            <summary>
                The C# migration operation generator.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpMigrationsGeneratorDependencies.CSharpSnapshotGenerator">
            <summary>
                The C# model snapshot generator.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator">
            <summary>
                Used to generate C# code for creating an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IModel" />.
            </summary>
            <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see>, and
                <see href="https://aka.ms/efcore-docs-design-time-services">EF Core design-time services</see> for more information and examples.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.#ctor(Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGeneratorDependencies)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator" /> class.
            </summary>
            <param name="dependencies">The dependencies.</param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.Dependencies">
            <summary>
                Dependencies for this service.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.Generate(System.String,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for creating an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IModel" />.
            </summary>
            <param name="modelBuilderName">The <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" /> variable name.</param>
            <param name="model">The model.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GenerateEntityTypes(System.String,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IEntityType},Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IEntityType" /> objects.
            </summary>
            <param name="modelBuilderName">The name of the builder variable.</param>
            <param name="entityTypes">The entity types.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GenerateEntityType(System.String,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IEntityType" />.
            </summary>
            <param name="builderName">The name of the builder variable.</param>
            <param name="entityType">The entity type.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GenerateOwnedTypes(System.String,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for owned entity types.
            </summary>
            <param name="entityTypeBuilderName">The name of the builder variable.</param>
            <param name="ownerships">The foreign keys identifying each entity type.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GenerateOwnedType(System.String,Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for an owned entity types.
            </summary>
            <param name="entityTypeBuilderName">The name of the builder variable.</param>
            <param name="ownership">The foreign key identifying the entity type.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GenerateEntityTypeRelationships(System.String,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for the relationships of an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IEntityType" />.
            </summary>
            <param name="modelBuilderName">The name of the builder variable.</param>
            <param name="entityType">The entity type.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GenerateRelationships(System.String,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for the relationships of an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IEntityType" />.
            </summary>
            <param name="entityTypeBuilderName">The name of the builder variable.</param>
            <param name="entityType">The entity type.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GenerateBaseType(System.String,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for the base type of an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IEntityType" />.
            </summary>
            <param name="entityTypeBuilderName">The name of the builder variable.</param>
            <param name="baseType">The base entity type.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GenerateSequence(System.String,Microsoft.EntityFrameworkCore.Metadata.ISequence,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ISequence" />.
            </summary>
            <param name="modelBuilderName">The name of the builder variable.</param>
            <param name="sequence">The sequence.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GenerateSequenceAnnotations(System.String,Microsoft.EntityFrameworkCore.Metadata.ISequence,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for sequence annotations.
            </summary>
            <param name="sequenceBuilderName">The name of the sequence builder variable.</param>
            <param name="sequence">The sequence.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GenerateProperties(System.String,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty},Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IProperty" /> objects.
            </summary>
            <param name="entityTypeBuilderName">The name of the builder variable.</param>
            <param name="properties">The properties.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GenerateProperty(System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IProperty" />.
            </summary>
            <param name="entityTypeBuilderName">The name of the builder variable.</param>
            <param name="property">The property.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GeneratePropertyAnnotations(System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for the annotations on an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IProperty" />.
            </summary>
            <param name="propertyBuilderName">The name of the builder variable.</param>
            <param name="property">The property.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GenerateComplexProperties(System.String,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IComplexProperty},Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IComplexProperty" /> objects.
            </summary>
            <param name="typeBuilderName">The name of the builder variable.</param>
            <param name="properties">The properties.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GenerateComplexProperty(System.String,Microsoft.EntityFrameworkCore.Metadata.IComplexProperty,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IComplexProperty" />.
            </summary>
            <param name="builderName">The name of the builder variable.</param>
            <param name="complexProperty">The entity type.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GenerateComplexPropertyAnnotations(System.String,Microsoft.EntityFrameworkCore.Metadata.IComplexProperty,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for the annotations on an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IProperty" />.
            </summary>
            <param name="propertyBuilderName">The name of the builder variable.</param>
            <param name="property">The property.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GenerateKeys(System.String,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey},Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IKey" /> objects.
            </summary>
            <param name="entityTypeBuilderName">The name of the builder variable.</param>
            <param name="keys">The keys.</param>
            <param name="primaryKey">The primary key.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GenerateKey(System.String,Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder,System.Boolean)">
            <summary>
                Generates code for an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IKey" />.
            </summary>
            <param name="entityTypeBuilderName">The name of the builder variable.</param>
            <param name="key">The key.</param>
            <param name="stringBuilder">The builder code is added to.</param>
            <param name="primary">A value indicating whether the key is primary.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GenerateKeyAnnotations(System.String,Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for the annotations on a key.
            </summary>
            <param name="keyBuilderName">The name of the builder variable.</param>
            <param name="key">The key.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GenerateIndexes(System.String,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex},Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IIndex" /> objects.
            </summary>
            <param name="entityTypeBuilderName">The name of the builder variable.</param>
            <param name="indexes">The indexes.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GenerateIndex(System.String,Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IIndex" />.
            </summary>
            <param name="entityTypeBuilderName">The name of the builder variable.</param>
            <param name="index">The index.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GenerateIndexAnnotations(System.String,Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for the annotations on an index.
            </summary>
            <param name="indexBuilderName">The name of the builder variable.</param>
            <param name="index">The index.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GenerateEntityTypeAnnotations(System.String,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for the annotations on an entity type.
            </summary>
            <param name="entityTypeBuilderName">The name of the builder variable.</param>
            <param name="entityType">The entity type.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GenerateEntityTypeMappingFragmentAnnotations(System.String,Microsoft.EntityFrameworkCore.Metadata.IEntityTypeMappingFragment,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for mapping fragment annotations.
            </summary>
            <param name="tableBuilderName">The name of the table builder variable.</param>
            <param name="fragment">The mapping fragment.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GenerateCheckConstraints(System.String,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint" /> objects.
            </summary>
            <param name="entityTypeBuilderName">The name of the builder variable.</param>
            <param name="entityType">The entity type.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GenerateCheckConstraint(System.String,Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint" />.
            </summary>
            <param name="entityTypeBuilderName">The name of the builder variable.</param>
            <param name="checkConstraint">The check constraint.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GenerateCheckConstraintAnnotations(Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for check constraint annotations.
            </summary>
            <param name="checkConstraint">The check constraint.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GenerateTriggers(System.String,Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.String,System.String,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ITrigger" /> objects.
            </summary>
            <param name="tableBuilderName">The name of the table builder variable.</param>
            <param name="entityType">The entity type.</param>
            <param name="table">The table name.</param>
            <param name="schema">The table schema.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GenerateTrigger(System.String,Microsoft.EntityFrameworkCore.Metadata.ITrigger,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ITrigger" />.
            </summary>
            <param name="tableBuilderName">The name of the table builder variable.</param>
            <param name="trigger">The trigger.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GenerateTriggerAnnotations(System.String,Microsoft.EntityFrameworkCore.Metadata.ITrigger,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for trigger annotations.
            </summary>
            <param name="triggerBuilderName">The name of the builder variable.</param>
            <param name="trigger">The trigger.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GeneratePropertyOverrides(System.String,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IRelationalPropertyOverrides" /> objects.
            </summary>
            <param name="tableBuilderName">The name of the table builder variable.</param>
            <param name="entityType">The entity type.</param>
            <param name="storeObject">The store object identifier.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GeneratePropertyOverride(System.String,Microsoft.EntityFrameworkCore.Metadata.IRelationalPropertyOverrides,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IRelationalPropertyOverrides" />.
            </summary>
            <param name="tableBuilderName">The name of the table builder variable.</param>
            <param name="overrides">The overrides.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GeneratePropertyOverridesAnnotations(System.String,Microsoft.EntityFrameworkCore.Metadata.IRelationalPropertyOverrides,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for property overrides annotations.
            </summary>
            <param name="propertyBuilderName">The name of the builder variable.</param>
            <param name="overrides">The overrides.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GenerateForeignKeys(System.String,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IForeignKey" /> objects.
            </summary>
            <param name="entityTypeBuilderName">The name of the builder variable.</param>
            <param name="foreignKeys">The foreign keys.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GenerateForeignKey(System.String,Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IForeignKey" />.
            </summary>
            <param name="entityTypeBuilderName">The name of the builder variable.</param>
            <param name="foreignKey">The foreign key.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GenerateForeignKeyAnnotations(System.String,Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for the annotations on a foreign key.
            </summary>
            <param name="foreignKeyBuilderName">The name of the builder variable.</param>
            <param name="foreignKey">The foreign key.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GenerateEntityTypeNavigations(System.String,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for the navigations of an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IEntityType" />.
            </summary>
            <param name="modelBuilderName">The name of the builder variable.</param>
            <param name="entityType">The entity type.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GenerateNavigations(System.String,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.INavigation},Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.INavigation" /> objects.
            </summary>
            <param name="entityTypeBuilderName">The name of the builder variable.</param>
            <param name="navigations">The navigations.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GenerateNavigation(System.String,Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.INavigation" />.
            </summary>
            <param name="entityTypeBuilderName">The name of the builder variable.</param>
            <param name="navigation">The navigation.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GenerateNavigationAnnotations(System.String,Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for the annotations on a navigation.
            </summary>
            <param name="navigationBuilderName">The name of the builder variable.</param>
            <param name="navigation">The navigation.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator.GenerateData(System.String,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.String,System.Object}},Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for data seeding.
            </summary>
            <param name="entityTypeBuilderName">The name of the builder variable.</param>
            <param name="properties">The properties to generate.</param>
            <param name="data">The data to be seeded.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGeneratorDependencies">
            <summary>
                <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGenerator" />
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
            <remarks>
                Do not construct instances of this class directly from either provider or application code as the
                constructor signature may change as new dependencies are added. Instead, use this type in
                your constructor so that an instance will be created and injected automatically by the
                dependency injection container. To create an instance with some dependent services replaced,
                first resolve the object from the dependency injection container, then replace selected
                services using the C# 'with' operator. Do not call the constructor at any point in this process.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGeneratorDependencies.#ctor(Microsoft.EntityFrameworkCore.Design.ICSharpHelper,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource,Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
            <remarks>
                Do not call this constructor directly from either provider or application code as it may change
                as new dependencies are added. Instead, use this type in your constructor so that an instance
                will be created and injected automatically by the dependency injection container. To create
                an instance with some dependent services replaced, first resolve the object from the dependency
                injection container, then replace selected services using the C# 'with' operator. Do not call
                the constructor at any point in this process.
            </remarks>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGeneratorDependencies.CSharpHelper">
            <summary>
                The C# helper.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGeneratorDependencies.RelationalTypeMappingSource">
            <summary>
                The type mapper.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.CSharpSnapshotGeneratorDependencies.AnnotationCodeGenerator">
            <summary>
                The annotation code generator.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.Design.ICSharpMigrationOperationGenerator">
            <summary>
                Used to generate C# code for creating <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation" /> objects.
            </summary>
            <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see>, and
                <see href="https://aka.ms/efcore-docs-design-time-services">EF Core design-time services</see> for more information and examples.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.ICSharpMigrationOperationGenerator.Generate(System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation},Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for creating <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation" /> objects.
            </summary>
            <param name="builderName">The <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation" /> variable name.</param>
            <param name="operations">The operations.</param>
            <param name="builder">The builder code is added to.</param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.Design.ICSharpSnapshotGenerator">
            <summary>
                Used to generate C# code for creating an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IModel" />.
            </summary>
            <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see>, and
                <see href="https://aka.ms/efcore-docs-design-time-services">EF Core design-time services</see> for more information and examples.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.ICSharpSnapshotGenerator.Generate(System.String,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Infrastructure.IndentedStringBuilder)">
            <summary>
                Generates code for creating an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IModel" />.
            </summary>
            <param name="builderName">The <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" /> variable name.</param>
            <param name="model">The model.</param>
            <param name="stringBuilder">The builder code is added to.</param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.Design.IMigrationsCodeGenerator">
            <summary>
                Used to generate code for migrations.
            </summary>
            <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see>, and
                <see href="https://aka.ms/efcore-docs-design-time-services">EF Core design-time services</see> for more information and examples.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.IMigrationsCodeGenerator.GenerateMetadata(System.String,System.Type,System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                Generates the migration metadata code.
            </summary>
            <param name="migrationNamespace">The migration's namespace.</param>
            <param name="contextType">The migration's <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> type.</param>
            <param name="migrationName">The migration's name.</param>
            <param name="migrationId">The migration's ID.</param>
            <param name="targetModel">The migration's target model.</param>
            <returns>The migration metadata code.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.IMigrationsCodeGenerator.GenerateMigration(System.String,System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation})">
            <summary>
                Generates the migration code.
            </summary>
            <param name="migrationNamespace">The migration's namespace.</param>
            <param name="migrationName">The migration's name.</param>
            <param name="upOperations">The migration's up operations.</param>
            <param name="downOperations">The migration's down operations.</param>
            <returns>The migration code.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.IMigrationsCodeGenerator.GenerateSnapshot(System.String,System.Type,System.String,Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                Generates the model snapshot code.
            </summary>
            <param name="modelSnapshotNamespace">The model snapshot's namespace.</param>
            <param name="contextType">The model snapshot's <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> type.</param>
            <param name="modelSnapshotName">The model snapshot's name.</param>
            <param name="model">The model.</param>
            <returns>The model snapshot code.</returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.IMigrationsCodeGenerator.FileExtension">
            <summary>
                Gets the file extension code files should use.
            </summary>
            <value> The file extension. </value>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.Design.IMigrationsCodeGeneratorSelector">
            <summary>
                Selects an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Design.IMigrationsCodeGenerator" /> service for a given programming language.
            </summary>
            <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see>, and
                <see href="https://aka.ms/efcore-docs-design-time-services">EF Core design-time services</see> for more information and examples.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.IMigrationsCodeGeneratorSelector.Select(System.String)">
            <summary>
                Selects an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Design.IMigrationsCodeGenerator" /> service for a given programming language.
            </summary>
            <param name="language">The programming language.</param>
            <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Design.IMigrationsCodeGenerator" />.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.Design.IMigrationsScaffolder">
            <summary>
                Used to scaffold new migrations.
            </summary>
            <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see>, and
                <see href="https://aka.ms/efcore-docs-design-time-services">EF Core design-time services</see> for more information and examples.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.IMigrationsScaffolder.ScaffoldMigration(System.String,System.String,System.String,System.String)">
            <summary>
                Scaffolds a new migration.
            </summary>
            <param name="migrationName">The migration's name.</param>
            <param name="rootNamespace">The project's root namespace.</param>
            <param name="subNamespace">The migration's sub-namespace.</param>
            <param name="language">The project's language.</param>
            <returns>The scaffolded migration.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.IMigrationsScaffolder.RemoveMigration(System.String,System.String,System.Boolean,System.String)">
            <summary>
                Removes the previous migration.
            </summary>
            <param name="projectDir">The project's root directory.</param>
            <param name="rootNamespace">The project's root namespace.</param>
            <param name="force">Don't check to see if the migration has been applied to the database.</param>
            <param name="language">The project's language.</param>
            <returns>The removed migration files.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.IMigrationsScaffolder.Save(System.String,Microsoft.EntityFrameworkCore.Migrations.Design.ScaffoldedMigration,System.String)">
            <summary>
                Saves a scaffolded migration to files.
            </summary>
            <param name="projectDir">The project's root directory.</param>
            <param name="migration">The scaffolded migration.</param>
            <param name="outputDir">The directory to put files in. Paths are relative to the project directory.</param>
            <returns>The saved migrations files.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationFiles">
            <summary>
                Represents the file generated for a migration.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationFiles.MigrationFile">
            <summary>
                Gets or sets the path to the migration file.
            </summary>
            <value> The path to the migration file. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationFiles.MetadataFile">
            <summary>
                Gets or sets the path to the migration metadata file.
            </summary>
            <value> The path to the migration metadata file. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationFiles.SnapshotFile">
            <summary>
                Gets or sets the path to the model snapshot file.
            </summary>
            <value> The path to the model snapshot file. </value>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsBundle">
            <summary>
                Defines the entry point for Migrations bundles.
            </summary>
            <remarks>
                See <see href="https://aka.ms/efcore-docs-migration-bundles">EF Core migration bundles</see>.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsBundle.Execute(System.String,System.Reflection.Assembly,System.Reflection.Assembly,System.String[])">
            <summary>
                The entry point for Migrations bundles.
            </summary>
            <param name="context">The DbContext to use.</param>
            <param name="assembly">The Migrations assembly.</param>
            <param name="startupAssembly">The startup assembly.</param>
            <param name="args">The command-line arguments.</param>
            <returns>Zero if the command succeeds; otherwise, one.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsCodeGenerator">
            <summary>
                Used to generate code for migrations.
            </summary>
            <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see>, and
                <see href="https://aka.ms/efcore-docs-design-time-services">EF Core design-time services</see> for more information and examples.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsCodeGenerator.#ctor(Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsCodeGeneratorDependencies)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsCodeGenerator" /> class.
            </summary>
            <param name="dependencies">The dependencies.</param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsCodeGenerator.FileExtension">
            <summary>
                Gets the file extension code files should use.
            </summary>
            <value> The file extension. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsCodeGenerator.Language">
            <summary>
                Gets the programming language supported by this service.
            </summary>
            <value> The language. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsCodeGenerator.Dependencies">
            <summary>
                Dependencies for this service.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsCodeGenerator.GenerateMigration(System.String,System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation})">
            <summary>
                Generates the migration code.
            </summary>
            <param name="migrationNamespace">The migration's namespace.</param>
            <param name="migrationName">The migration's name.</param>
            <param name="upOperations">The migration's up operations.</param>
            <param name="downOperations">The migration's down operations.</param>
            <returns>The migration code.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsCodeGenerator.GenerateMetadata(System.String,System.Type,System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                Generates the migration metadata code.
            </summary>
            <param name="migrationNamespace">The migration's namespace.</param>
            <param name="contextType">The migration's <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> type.</param>
            <param name="migrationName">The migration's name.</param>
            <param name="migrationId">The migration's ID.</param>
            <param name="targetModel">The migration's target model.</param>
            <returns>The migration metadata code.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsCodeGenerator.GenerateSnapshot(System.String,System.Type,System.String,Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                Generates the model snapshot code.
            </summary>
            <param name="modelSnapshotNamespace">The model snapshot's namespace.</param>
            <param name="contextType">The model snapshot's <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> type.</param>
            <param name="modelSnapshotName">The model snapshot's name.</param>
            <param name="model">The model.</param>
            <returns>The model snapshot code.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsCodeGenerator.GetNamespaces(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation})">
            <summary>
                Gets the namespaces required for a list of <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation" /> objects.
            </summary>
            <param name="operations">The operations.</param>
            <returns>The namespaces.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsCodeGenerator.GetNamespaces(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                Gets the namespaces required for an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IModel" />.
            </summary>
            <param name="model">The model.</param>
            <returns>The namespaces.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsCodeGeneratorDependencies">
            <summary>
                <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsCodeGenerator" />
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
            <remarks>
                Do not construct instances of this class directly from either provider or application code as the
                constructor signature may change as new dependencies are added. Instead, use this type in
                your constructor so that an instance will be created and injected automatically by the
                dependency injection container. To create an instance with some dependent services replaced,
                first resolve the object from the dependency injection container, then replace selected
                services using the C# 'with' operator. Do not call the constructor at any point in this process.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsCodeGeneratorDependencies.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource,Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
            <remarks>
                Do not call this constructor directly from either provider or application code as it may change
                as new dependencies are added. Instead, use this type in your constructor so that an instance
                will be created and injected automatically by the dependency injection container. To create
                an instance with some dependent services replaced, first resolve the object from the dependency
                injection container, then replace selected services using the C# 'with' operator. Do not call
                the constructor at any point in this process.
            </remarks>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsCodeGeneratorDependencies.RelationalTypeMappingSource">
            <summary>
                The type mapper.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsCodeGeneratorDependencies.AnnotationCodeGenerator">
            <summary>
                The annotation code generator.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsScaffolder">
            <summary>
                Used to scaffold new migrations.
            </summary>
            <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see>, and
                <see href="https://aka.ms/efcore-docs-design-time-services">EF Core design-time services</see> for more information and examples.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsScaffolder.#ctor(Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsScaffolderDependencies)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsScaffolder" /> class.
            </summary>
            <param name="dependencies">The dependencies.</param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsScaffolder.Dependencies">
            <summary>
                Dependencies for this service.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsScaffolder.ScaffoldMigration(System.String,System.String,System.String)">
            <summary>
                Scaffolds a new migration.
            </summary>
            <param name="migrationName">The migration's name.</param>
            <param name="rootNamespace">The project's root namespace.</param>
            <param name="subNamespace">The migration's sub-namespace.</param>
            <returns>The scaffolded migration.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsScaffolder.ScaffoldMigration(System.String,System.String,System.String,System.String)">
            <summary>
                Scaffolds a new migration.
            </summary>
            <param name="migrationName">The migration's name.</param>
            <param name="rootNamespace">
                The project's root namespace, <see langword="null" /> to indicate no automatic
                namespace generation, just use sub-namespace as is.
            </param>
            <param name="subNamespace">
                The migration's sub-namespace. Note: the root-namespace and
                the sub-namespace should not both be empty.
            </param>
            <param name="language">The project's language.</param>
            <returns>The scaffolded migration.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsScaffolder.GetSubNamespace(System.String,System.String)">
            <summary>
                Gets a sub-namespace.
            </summary>
            <param name="rootNamespace">The root namespace.</param>
            <param name="namespace">The full namespace.</param>
            <returns>The sub-namespace.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsScaffolder.RemoveMigration(System.String,System.String,System.Boolean)">
            <summary>
                Removes the previous migration.
            </summary>
            <param name="projectDir">The project's root directory.</param>
            <param name="rootNamespace">The project's root namespace.</param>
            <param name="force">Don't check to see if the migration has been applied to the database.</param>
            <returns>The removed migration files.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsScaffolder.RemoveMigration(System.String,System.String,System.Boolean,System.String)">
            <summary>
                Removes the previous migration.
            </summary>
            <param name="projectDir">The project's root directory.</param>
            <param name="rootNamespace">The project's root namespace.</param>
            <param name="force">Don't check to see if the migration has been applied to the database.</param>
            <param name="language">The project's language.</param>
            <returns>The removed migration files.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsScaffolder.Save(System.String,Microsoft.EntityFrameworkCore.Migrations.Design.ScaffoldedMigration,System.String)">
            <summary>
                Saves a scaffolded migration to files.
            </summary>
            <param name="projectDir">The project's root directory.</param>
            <param name="migration">The scaffolded migration.</param>
            <param name="outputDir">The directory to put files in. Paths are relative to the project directory.</param>
            <returns>The saved migrations files.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsScaffolder.GetNamespace(System.Type,System.String)">
            <summary>
                Gets the namespace of a sibling type. If none, the default namespace is used.
            </summary>
            <param name="siblingType">The sibling type.</param>
            <param name="defaultNamespace">The default namespace.</param>
            <returns>The namespace.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsScaffolder.GetDirectory(System.String,System.String,System.String)">
            <summary>
                Gets the directory of a sibling file. If none, the directory corresponding to the sub-namespace is used.
            </summary>
            <param name="projectDir">The project's root directory.</param>
            <param name="siblingFileName">The sibling file's name.</param>
            <param name="subnamespace">The sub-namespace.</param>
            <returns>The directory path.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsScaffolder.TryGetProjectFile(System.String,System.String)">
            <summary>
                Tries to find a file under the project directory.
            </summary>
            <param name="projectDir">The project directory.</param>
            <param name="fileName">The filename.</param>
            <returns>The file path or null if none.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsScaffolderDependencies">
            <summary>
                <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsScaffolder" />
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
            <remarks>
                Do not construct instances of this class directly from either provider or application code as the
                constructor signature may change as new dependencies are added. Instead, use this type in
                your constructor so that an instance will be created and injected automatically by the
                dependency injection container. To create an instance with some dependent services replaced,
                first resolve the object from the dependency injection container, then replace selected
                services using the C# 'with' operator. Do not call the constructor at any point in this process.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsScaffolderDependencies.#ctor(Microsoft.EntityFrameworkCore.Infrastructure.ICurrentDbContext,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.IMigrationsAssembly,Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer,Microsoft.EntityFrameworkCore.Migrations.IMigrationsIdGenerator,Microsoft.EntityFrameworkCore.Migrations.Design.IMigrationsCodeGeneratorSelector,Microsoft.EntityFrameworkCore.Migrations.IHistoryRepository,Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter,Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider,Microsoft.EntityFrameworkCore.Migrations.Internal.ISnapshotModelProcessor,Microsoft.EntityFrameworkCore.Migrations.IMigrator)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
            <remarks>
                Do not call this constructor directly from either provider or application code as it may change
                as new dependencies are added. Instead, use this type in your constructor so that an instance
                will be created and injected automatically by the dependency injection container. To create
                an instance with some dependent services replaced, first resolve the object from the dependency
                injection container, then replace selected services using the C# 'with' operator. Do not call
                the constructor at any point in this process.
            </remarks>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsScaffolderDependencies.CurrentContext">
            <summary>
                The current DbContext.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsScaffolderDependencies.Model">
            <summary>
                The model.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsScaffolderDependencies.MigrationsAssembly">
            <summary>
                The migrations assembly.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsScaffolderDependencies.MigrationsModelDiffer">
            <summary>
                The migrations model differ.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsScaffolderDependencies.MigrationsIdGenerator">
            <summary>
                The migrations ID generator.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsScaffolderDependencies.MigrationsCodeGeneratorSelector">
            <summary>
                The migrations code generator selector.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsScaffolderDependencies.HistoryRepository">
            <summary>
                The history repository.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsScaffolderDependencies.OperationReporter">
            <summary>
                The operation reporter.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsScaffolderDependencies.DatabaseProvider">
            <summary>
                The database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsScaffolderDependencies.SnapshotModelProcessor">
            <summary>
                The snapshot model processor.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.MigrationsScaffolderDependencies.Migrator">
            <summary>
                The migrator.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.Design.ScaffoldedMigration">
            <summary>
                Represents a scaffolded migration.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Design.ScaffoldedMigration.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Design.ScaffoldedMigration" /> class.
            </summary>
            <param name="fileExtension">The file extension code files should use.</param>
            <param name="previousMigrationId">The previous migration's ID.</param>
            <param name="migrationCode">The contents of the migration file.</param>
            <param name="migrationId">The migration's ID.</param>
            <param name="metadataCode">The contents of the migration metadata file.</param>
            <param name="migrationSubNamespace">The migration's sub-namespace.</param>
            <param name="snapshotCode">The contents of the model snapshot file.</param>
            <param name="snapshotName">The model snapshot's name.</param>
            <param name="snapshotSubNamespace">The model snapshot's sub-namespace.</param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.ScaffoldedMigration.FileExtension">
            <summary>
                Gets the file extension code files should use.
            </summary>
            <value> The file extension code files should use. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.ScaffoldedMigration.PreviousMigrationId">
            <summary>
                Gets the previous migration's ID.
            </summary>
            <value> The previous migration's ID. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.ScaffoldedMigration.MigrationCode">
            <summary>
                Gets the contents of the migration file.
            </summary>
            <value> The contents of the migration file. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.ScaffoldedMigration.MigrationId">
            <summary>
                Gets the migration's ID.
            </summary>
            <value> The migration's ID. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.ScaffoldedMigration.MetadataCode">
            <summary>
                Gets the contents of the migration metadata file.
            </summary>
            <value> The contents of the migration metadata file. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.ScaffoldedMigration.MigrationSubNamespace">
            <summary>
                Gets the migration's sub-namespace.
            </summary>
            <value> The migration's sub-namespace. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.ScaffoldedMigration.SnapshotCode">
            <summary>
                Gets the contents of the model snapshot file.
            </summary>
            <value> The contents of the model snapshot file. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.ScaffoldedMigration.SnapshotName">
            <summary>
                Gets the model snapshot's name.
            </summary>
            <value> The model snapshot's name. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Design.ScaffoldedMigration.SnapshotSubnamespace">
            <summary>
                Gets the model snapshot's sub-namespace.
            </summary>
            <value> The model snapshot's sub-namespace. </value>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.Internal.ISnapshotModelProcessor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.ISnapshotModelProcessor.Process(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsCodeGeneratorSelector">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsCodeGeneratorSelector.#ctor(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Design.IMigrationsCodeGenerator})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.Internal.SnapshotModelProcessor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.SnapshotModelProcessor.#ctor(Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter,Microsoft.EntityFrameworkCore.Infrastructure.IModelRuntimeInitializer)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.SnapshotModelProcessor.Process(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.DesignStrings">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.BadConnection(System.Object)">
            <summary>
                Failed creating connection: {exceptionMessage}
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.BadSequenceType(System.Object,System.Object)">
            <summary>
                Cannot scaffold sequence '{sequenceName}' because it uses type '{typeName}' which is unsupported.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DesignStrings.BundleFullName">
            <summary>
                Entity Framework Core Migrations Bundle
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.CannotCreateContextInstance(System.Object,System.Object)">
            <summary>
                Unable to create a 'DbContext' of type '{contextType}'. The exception '{rootException}' was thrown while attempting to create an instance. For the different patterns supported at design time, see https://go.microsoft.com/fwlink/?linkid=851728
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.CannotFindDbContextTypes(System.Object)">
            <summary>
                The exception '{rootException}' was thrown while attempting to find 'DbContext' types. For the different patterns supported at design time, see https://go.microsoft.com/fwlink/?linkid=851728
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.CannotFindDesignTimeProviderAssemblyAttribute(System.Object)">
            <summary>
                Unable to find expected assembly attribute [DesignTimeProviderServices] in provider assembly '{runtimeProviderAssemblyName}'. This attribute is required to identify the class which acts as the design-time service provider factory for the provider.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.CannotFindRuntimeProviderAssembly(System.Object)">
            <summary>
                Unable to find provider assembly '{assemblyName}'. Ensure the name is correct and it's referenced by the project.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.CannotFindTypeMappingForColumn(System.Object,System.Object)">
            <summary>
                Could not find type mapping for column '{columnName}' with data type '{dateType}'. Skipping column.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DesignStrings.CannotGenerateTypeQualifiedMethodCall">
            <summary>
                A type-qualified method call requires an instance identifier, a MethodInfo and no chained calls.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DesignStrings.CircularBaseClassDependency">
            <summary>
                You cannot add a migration with the name 'Migration'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.CompiledModelConstructorBinding(System.Object,System.Object,System.Object)">
            <summary>
                The entity type '{entityType}' has a custom constructor binding. Compiled model can't be generated, because custom constructor bindings are not supported. Configure the custom constructor binding in '{customize}' in a partial '{className}' class instead.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.CompiledModelCustomCacheKeyFactory(System.Object)">
            <summary>
                The context is configured to use a custom model cache key factory '{factoryType}', this usually indicates that the produced model can change between context instances. To preserve this behavior manually modify the generated compiled model source code.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.CompiledModelDefiningQuery(System.Object)">
            <summary>
                The entity type '{entityType}' has a defining query configured. Compiled model can't be generated, because defining queries are not supported.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.CompiledModelGenerated(System.Object)">
            <summary>
                Successfully generated a compiled model, to use it call '{optionsCall}'. Run this command again when the model is modified.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.CompiledModelQueryFilter(System.Object)">
            <summary>
                The entity type '{entityType}' has a query filter configured. Compiled model can't be generated, because query filters are not supported.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.CompiledModelValueGenerator(System.Object,System.Object,System.Object)">
            <summary>
                The property '{entityType}.{property}' has a value generator configured. Use '{method}' to configure the value generator factory type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.ConflictingContextAndMigrationName(System.Object)">
            <summary>
                The name you have chosen for the migration, '{name}', is the same as the context class name. Please choose a different name for your migration. Might we suggest 'InitialCreate' for your first migration?
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DesignStrings.ConnectionDescription">
            <summary>
                The connection string to the database. Defaults to the one specified in AddDbContext or OnConfiguring.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.ContextClassNotValidCSharpIdentifier(System.Object)">
            <summary>
                The context class name '{contextClassName}' is not a valid C# identifier.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.DatabaseDropped(System.Object)">
            <summary>
                Successfully dropped database '{name}'.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DesignStrings.DestructiveOperation">
            <summary>
                An operation was scaffolded that may result in the loss of data. Please review the migration for accuracy.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DesignStrings.Done">
            <summary>
                Done.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.DroppingDatabase(System.Object,System.Object)">
            <summary>
                Dropping database '{database}' on server '{dataSource}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.DuplicateMigrationName(System.Object)">
            <summary>
                The name '{migrationName}' is used by an existing migration.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.EncodingIgnored(System.Object)">
            <summary>
                The encoding '{encoding}' specified in the output directive will be ignored. EF Core always scaffolds files using the encoding 'utf-8'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.ErrorConnecting(System.Object)">
            <summary>
                An error occurred while accessing the database. Continuing without the information provided by the database. Error: {message}
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.ErrorGeneratingOutput(System.Object)">
            <summary>
                Processing '{inputFile}' failed.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.ExistingFiles(System.Object,System.Object)">
            <summary>
                The following file(s) already exist in directory '{outputDirectoryName}': {existingFiles}. Use the Force flag to overwrite these files.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DesignStrings.FindingContextFactories">
            <summary>
                Finding IDesignTimeDbContextFactory implementations...
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DesignStrings.FindingContexts">
            <summary>
                Finding DbContext classes...
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.FindingDesignTimeServices(System.Object)">
            <summary>
                Finding IDesignTimeServices implementations in assembly '{startupAssembly}'...
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DesignStrings.FindingHostingServices">
            <summary>
                Finding Microsoft.Extensions.Hosting service provider...
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.FindingProviderServices(System.Object)">
            <summary>
                Finding design-time services for provider '{provider}'...
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DesignStrings.FindingReferencedContexts">
            <summary>
                Finding DbContext classes in the project...
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.FindingReferencedServices(System.Object)">
            <summary>
                Finding design-time services referenced by assembly '{startupAssembly}'...
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.FindingServiceProvider(System.Object)">
            <summary>
                Finding application service provider in assembly '{startupAssembly}'...
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.ForceRemoveMigration(System.Object,System.Object)">
            <summary>
                Unable to check if the migration '{name}' has been applied to the database. If it has, you will need to manually revert its changes. Error encountered while checking: {error}
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.ForeignKeyPrincipalEndContainsNullableColumns(System.Object,System.Object,System.Object)">
            <summary>
                The principal end of the foreign key '{foreignKeyName}' is supported by the unique index '{indexName}' and contains the following nullable columns '{columnNames}'. Entity Framework requires the properties representing those columns to be non-nullable.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.ForeignKeyScaffoldErrorPrincipalKeyNotFound(System.Object,System.Object,System.Object)">
            <summary>
                Could not scaffold the foreign key '{foreignKeyName}'. A key for '{columnsList}' was not found in the principal entity type '{principalEntityType}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.ForeignKeyScaffoldErrorPrincipalTableNotFound(System.Object)">
            <summary>
                Could not scaffold the foreign key '{foreignKeyName}'. The referenced table could not be found. This most likely occurred because the referenced table was excluded from scaffolding.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.ForeignKeyScaffoldErrorPrincipalTableScaffoldingError(System.Object,System.Object)">
            <summary>
                Could not scaffold the foreign key '{foreignKeyName}'. The referenced table '{principalTableName}' could not be scaffolded.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.ForeignKeyScaffoldErrorPropertyNotFound(System.Object,System.Object)">
            <summary>
                Could not scaffold the foreign key '{foreignKeyName}'.  The following columns in the foreign key could not be scaffolded: {columnNames}.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.ForeignKeyWithSameFacetsExists(System.Object,System.Object)">
            <summary>
                Could not scaffold the foreign key '{foreignKeyName}'. Foreign key '{existingForeignKey}' is defined on same columns targeting same key on principal table.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.ForeignMigrations(System.Object)">
            <summary>
                The namespace '{migrationsNamespace}' contains migrations for a different DbContext. This can result in conflicting migration names. It's recommend to put migrations for different DbContext classes into different namespaces.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.FoundContextFactory(System.Object)">
            <summary>
                Found IDesignTimeDbContextFactory implementation '{factory}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.FoundDbContext(System.Object)">
            <summary>
                Found DbContext '{contextType}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.InvokeCreateHostBuilderFailed(System.Object)">
            <summary>
                An error occurred while accessing the Microsoft.Extensions.Hosting services. Continuing without the application service provider. Error: {error}
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.LiteralExpressionNotSupported(System.Object,System.Object)">
            <summary>
                The literal expression '{expression}' for '{type}' cannot be parsed. Only simple constructor calls and factory methods are supported.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DesignStrings.MalformedCreateHostBuilder">
            <summary>
                An unexpected return type was encountered while accessing the Microsoft.Extensions.Hosting services. Method 'CreateHostBuilder(string[])' should return an object of type 'IHostBuilder'. Continuing without the application service provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DesignStrings.ManuallyDeleted">
            <summary>
                The model snapshot and the backing model of the last migration are different. Continuing under the assumption that the last migration was deleted manually.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DesignStrings.MigrationDescription">
            <summary>
                The target migration. If '0', all migrations will be reverted. Defaults to the last migration.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.MigrationsAssemblyMismatch(System.Object,System.Object)">
            <summary>
                Your target project '{assembly}' doesn't match your migrations assembly '{migrationsAssembly}'. Either change your target project or change your migrations assembly.
                Change your migrations assembly by using DbContextOptionsBuilder. E.g. options.UseSqlServer(connection, b =&gt; b.MigrationsAssembly("{assembly}")). By default, the migrations assembly is the assembly containing the DbContext.
                Change your target project to the migrations project by using the Package Manager Console's Default project drop-down list, or by executing "dotnet ef" from the directory containing the migrations project.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.MultipleAnnotationConflict(System.Object)">
            <summary>
                The annotation '{annotationName}' was specified twice with potentially different values. Specifying the same annotation multiple times for different providers is no longer supported. Review the generated Migration to ensure it is correct and, if necessary, edit the Migration to fix any issues.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DesignStrings.MultipleContexts">
            <summary>
                More than one DbContext was found. Specify which one to use. Use the '-Context' parameter for PowerShell commands and the '--context' parameter for dotnet commands.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.MultipleContextsWithName(System.Object)">
            <summary>
                More than one DbContext named '{name}' was found. Specify which one to use by providing its fully qualified name.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.MultipleContextsWithQualifiedName(System.Object)">
            <summary>
                More than one DbContext named '{name}' was found. Specify which one to use by providing its fully qualified name using its exact case.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DesignStrings.NoColorDescription">
            <summary>
                Don't colorize output.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.NoContext(System.Object)">
            <summary>
                No DbContext was found in assembly '{assembly}'. Ensure that you're using the correct assembly and that the type is neither abstract nor generic.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DesignStrings.NoContextTemplate">
            <summary>
                You must provide a DbContext.t4 file in order to scaffold using custom templates.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DesignStrings.NoContextTemplateButConfiguration">
            <summary>
                You've provided an EntityTypeConfiguration.t4 file without a corresponding DbContext.t4 file. The generated DbContext code must be modified to work with your configuration classes. Provide a DbContext.t4 file and try again.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.NoContextWithName(System.Object)">
            <summary>
                No DbContext named '{name}' was found.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DesignStrings.NoCreateHostBuilder">
            <summary>
                No static method 'CreateHostBuilder(string[])' was found on class 'Program'.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DesignStrings.NoDesignTimeServices">
            <summary>
                No design-time services were found.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.NoLanguageService(System.Object,System.Object)">
            <summary>
                The project language '{language}' isn't supported by the built-in {service} service. You can try looking for an additional NuGet package which supports this language; moving your DbContext type to a C# class library referenced by this project; or manually implementing and registering the design-time service for the programming language.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.NoMigrationFile(System.Object,System.Object)">
            <summary>
                No file named '{file}' was found. You must manually remove the migration class '{migrationClass}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.NoMigrationMetadataFile(System.Object)">
            <summary>
                No file named '{file}' was found.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.NonNullableBoooleanColumnHasDefaultConstraint(System.Object)">
            <summary>
                The column '{columnName}' would normally be mapped to a non-nullable bool property, but it has a default constraint. Such a column is mapped to a nullable bool property to allow a difference between setting the property to false and invoking the default constraint. See https://go.microsoft.com/fwlink/?linkid=851278 for details.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.NonRelationalProvider(System.Object)">
            <summary>
                The provider '{provider}' is not a Relational provider and therefore cannot be used with Migrations.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DesignStrings.NoPendingModelChanges">
            <summary>
                No changes have been made to the model since the last migration.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DesignStrings.NoReferencedServices">
            <summary>
                No referenced design-time services were found.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DesignStrings.NoRelationalConnection">
            <summary>
                Connection information is only available for relational database providers.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DesignStrings.NoServiceProvider">
            <summary>
                No application service provider was found.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DesignStrings.NoSnapshot">
            <summary>
                No ModelSnapshot was found.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.NoSnapshotFile(System.Object,System.Object)">
            <summary>
                No file named '{file}' was found. You must manually remove the model snapshot class '{snapshotClass}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.NotExistDatabase(System.Object)">
            <summary>
                Database '{name}' did not exist, no action was taken.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DesignStrings.PendingModelChanges">
            <summary>
                Changes have been made to the model since the last migration. Add a new migration.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DesignStrings.PrefixDescription">
            <summary>
                Prefix output with level.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.PrimaryKeyErrorPropertyNotFound(System.Object,System.Object)">
            <summary>
                Could not scaffold the primary key for '{tableName}'. The following columns in the primary key could not be scaffolded: {columnNames}.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.ProviderReturnedNullModel(System.Object)">
            <summary>
                Metadata model returned should not be null. Provider: {providerTypeName}.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.ReadOnlyFiles(System.Object,System.Object)">
            <summary>
                No files were generated in directory '{outputDirectoryName}'. The following file(s) already exist(s) and must be made writeable to continue: {readOnlyFiles}.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.RemovingMigration(System.Object)">
            <summary>
                Removing migration '{name}'.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DesignStrings.RemovingSnapshot">
            <summary>
                Removing model snapshot.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.ReusingNamespace(System.Object)">
            <summary>
                Reusing namespace of type '{type}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.ReusingSnapshotName(System.Object)">
            <summary>
                Reusing model snapshot name '{name}'.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DesignStrings.RevertingSnapshot">
            <summary>
                Reverting the model snapshot.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.RevertMigration(System.Object)">
            <summary>
                The migration '{name}' has already been applied to the database. Revert it and try again. If the migration has been applied to other databases, consider reverting its changes using a new migration instead.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DesignStrings.SensitiveInformationWarning">
            <summary>
                To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DesignStrings.SequencesRequireName">
            <summary>
                Sequence name cannot be null or empty. Entity Framework cannot model a sequence that does not have a name.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.UnableToGenerateEntityType(System.Object)">
            <summary>
                Unable to generate entity type for table '{tableName}' since its primary key could not be scaffolded.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.UnableToScaffoldIndexMissingProperty(System.Object,System.Object)">
            <summary>
                Unable to scaffold the index '{indexName}'. The following columns could not be scaffolded: {columnNames}.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.UnhandledEnumValue(System.Object)">
            <summary>
                Unhandled enum value '{enumValue}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.UnknownDirectiveProcessor(System.Object)">
            <summary>
                Failed to resolve type for directive processor {name}.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.UnknownLiteral(System.Object)">
            <summary>
                Cannot scaffold C# literals of type '{literalType}'. The provider should implement CoreTypeMapping.GenerateCodeLiteral to support using it at design time.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.UnknownOperation(System.Object)">
            <summary>
                The current CSharpMigrationOperationGenerator cannot scaffold operations of type '{operationType}'. Configure your design-time services to use one that can.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.UnreferencedAssembly(System.Object,System.Object)">
            <summary>
                Could not load assembly '{assembly}'. Ensure it is referenced by the startup project '{startupProject}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.UseContext(System.Object)">
            <summary>
                Using context '{name}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.UsingDbContextFactory(System.Object)">
            <summary>
                Using DbContext factory '{factory}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.UsingDesignTimeServices(System.Object)">
            <summary>
                Using design-time services from class '{designTimeServices}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.UsingEnvironment(System.Object)">
            <summary>
                Using environment '{environment}'.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DesignStrings.UsingHostingServices">
            <summary>
                Using application service provider from Microsoft.Extensions.Hosting.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.UsingProviderServices(System.Object)">
            <summary>
                Using design-time services from provider '{provider}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.UsingReferencedServices(System.Object)">
            <summary>
                Using design-time services from assembly '{referencedAssembly}'.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DesignStrings.VerboseDescription">
            <summary>
                Show verbose output.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.VersionMismatch(System.Object,System.Object)">
            <summary>
                The Entity Framework tools version '{toolsVersion}' is older than that of the runtime '{runtimeVersion}'. Update the tools for the latest features and bug fixes. See https://aka.ms/AAc1fbw for more information.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.WritingMigration(System.Object)">
            <summary>
                Writing migration to '{file}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DesignStrings.WritingSnapshot(System.Object)">
            <summary>
                Writing model snapshot to '{file}'.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.ILinqToCSharpSyntaxTranslator">
            <summary>
                Translates a LINQ expression tree to a Roslyn syntax tree.
            </summary>
            <remarks>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ILinqToCSharpSyntaxTranslator.TranslateStatement(System.Linq.Expressions.Expression,System.Collections.Generic.ISet{System.String})">
            <summary>
                Translates a node representing a statement into a Roslyn syntax tree.
            </summary>
            <param name="node">The node to be translated.</param>
            <param name="collectedNamespaces">Any namespaces required by the translated code will be added to this set.</param>
            <returns>A Roslyn syntax tree representation of <paramref name="node" />.</returns>
            <remarks>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ILinqToCSharpSyntaxTranslator.TranslateExpression(System.Linq.Expressions.Expression,System.Collections.Generic.ISet{System.String})">
            <summary>
                Translates a node representing an expression into a Roslyn syntax tree.
            </summary>
            <param name="node">The node to be translated.</param>
            <param name="collectedNamespaces">Any namespaces required by the translated code will be added to this set.</param>
            <returns>A Roslyn syntax tree representation of <paramref name="node" />.</returns>
            <remarks>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </remarks>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqToCSharpSyntaxTranslator.CapturedVariables">
            <summary>
                Returns the captured variables detected in the last translation.
            </summary>
            <remarks>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </remarks>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.#ctor(Microsoft.CodeAnalysis.Editing.SyntaxGenerator)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.CapturedVariables">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.Result">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.TranslateStatement(System.Linq.Expressions.Expression,System.Collections.Generic.ISet{System.String})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.TranslateExpression(System.Linq.Expressions.Expression,System.Collections.Generic.ISet{System.String})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.TranslateCore(System.Linq.Expressions.Expression,System.Collections.Generic.ISet{System.String},System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.Translate(System.Linq.Expressions.Expression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.Translate``1(System.Linq.Expressions.Expression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.Translate(System.Linq.Expressions.Expression,Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.Visit(System.Linq.Expressions.Expression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.VisitBlock(System.Linq.Expressions.BlockExpression)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.VisitCatchBlock(System.Linq.Expressions.CatchBlock)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.TranslateCatchBlock(System.Linq.Expressions.CatchBlock,System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.TranslateConditional(System.Linq.Expressions.ConditionalExpression,Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.VisitDefault(System.Linq.Expressions.DefaultExpression)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.VisitGoto(System.Linq.Expressions.GotoExpression)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.VisitInvocation(System.Linq.Expressions.InvocationExpression)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.VisitLabel(System.Linq.Expressions.LabelExpression)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.VisitLabelTarget(System.Linq.Expressions.LabelTarget)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.TranslateLabelTarget(System.Linq.Expressions.LabelTarget)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.VisitLambda``1(System.Linq.Expressions.Expression{``0})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.VisitLoop(System.Linq.Expressions.LoopExpression)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.VisitMember(System.Linq.Expressions.MemberExpression)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.VisitIndex(System.Linq.Expressions.IndexExpression)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.VisitNew(System.Linq.Expressions.NewExpression)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.VisitSwitchCase(System.Linq.Expressions.SwitchCase)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.VisitSwitch(System.Linq.Expressions.SwitchExpression)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.TranslateSwitch(System.Linq.Expressions.SwitchExpression,Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.VisitTry(System.Linq.Expressions.TryExpression)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.VisitListInit(System.Linq.Expressions.ListInitExpression)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.VisitElementInit(System.Linq.Expressions.ElementInit)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.VisitExtension(System.Linq.Expressions.Expression)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqToCSharpSyntaxTranslator.SideEffectDetectionSyntaxWalker.CanBeReordered(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)">
            <summary>
                Returns whether the two provided nodes can be re-ordered without the reversed evaluation order having any effect.
                For example, two literal expressions can be safely ordered, while two invocations cannot.
            </summary>
        </member>
        <member name="M:System.Linq.Expressions.ExpressionVisitorExtensions.Visit(System.Linq.Expressions.ExpressionVisitor,System.Collections.Generic.IReadOnlyList{System.Linq.Expressions.Expression})">
            <summary>
                Dispatches the list of expressions to one of the more specialized visit methods in this class.
            </summary>
            <param name="visitor">The expression visitor.</param>
            <param name="nodes">The expressions to visit.</param>
            <returns>
                The modified expression list, if any of the elements were modified; otherwise, returns the original expression list.
            </returns>
        </member>
        <member name="M:System.Linq.Expressions.ExpressionVisitorExtensions.VisitAndConvert``1(System.Linq.Expressions.ExpressionVisitor,System.Collections.Generic.IReadOnlyList{``0},System.String)">
            <summary>
                Visits an expression, casting the result back to the original expression type.
            </summary>
            <typeparam name="T">The type of the expression.</typeparam>
            <param name="visitor">The expression visitor.</param>
            <param name="nodes">The expression to visit.</param>
            <param name="callerName">The name of the calling method; used to report to report a better error message.</param>
            <returns>
                The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
            <exception cref="T:System.InvalidOperationException">The visit method for this node returned a different type.</exception>
        </member>
        <member name="M:System.Linq.Expressions.ExpressionVisitorExtensions.Visit``1(System.Linq.Expressions.ExpressionVisitor,System.Collections.Generic.IReadOnlyList{``0},System.Func{``0,``0})">
            <summary>
                Visits all nodes in the collection using a specified element visitor.
            </summary>
            <typeparam name="T">The type of the nodes.</typeparam>
            <param name="visitor">The expression visitor.</param>
            <param name="nodes">The nodes to visit.</param>
            <param name="elementVisitor">
                A delegate that visits a single element,
                optionally replacing it with a new element.
            </param>
            <returns>
                The modified node list, if any of the elements were modified;
                otherwise, returns the original node list.
            </returns>
        </member>
        <member name="M:System.SharedTypeExtensions.DisplayName(System.Type,System.Boolean,System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
    </members>
</doc>
